// flow-typed signature: 5ea77944801786758c90aa03c88ded57
// flow-typed version: <<STUB>>/eslint_vCompuIves/eslint#add/define-parser/flow_v0.64.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'eslint'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'eslint' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'eslint/bin/eslint' {
  declare module.exports: any;
}

declare module 'eslint/conf/config-schema' {
  declare module.exports: any;
}

declare module 'eslint/conf/default-cli-options' {
  declare module.exports: any;
}

declare module 'eslint/conf/default-config-options' {
  declare module.exports: any;
}

declare module 'eslint/conf/environments' {
  declare module.exports: any;
}

declare module 'eslint/conf/eslint-all' {
  declare module.exports: any;
}

declare module 'eslint/conf/eslint-recommended' {
  declare module.exports: any;
}

declare module 'eslint/karma.conf' {
  declare module.exports: any;
}

declare module 'eslint/lib/api' {
  declare module.exports: any;
}

declare module 'eslint/lib/ast-utils' {
  declare module.exports: any;
}

declare module 'eslint/lib/cli-engine' {
  declare module.exports: any;
}

declare module 'eslint/lib/cli' {
  declare module.exports: any;
}

declare module 'eslint/lib/code-path-analysis/code-path-analyzer' {
  declare module.exports: any;
}

declare module 'eslint/lib/code-path-analysis/code-path-segment' {
  declare module.exports: any;
}

declare module 'eslint/lib/code-path-analysis/code-path-state' {
  declare module.exports: any;
}

declare module 'eslint/lib/code-path-analysis/code-path' {
  declare module.exports: any;
}

declare module 'eslint/lib/code-path-analysis/debug-helpers' {
  declare module.exports: any;
}

declare module 'eslint/lib/code-path-analysis/fork-context' {
  declare module.exports: any;
}

declare module 'eslint/lib/code-path-analysis/id-generator' {
  declare module.exports: any;
}

declare module 'eslint/lib/config' {
  declare module.exports: any;
}

declare module 'eslint/lib/config/autoconfig' {
  declare module.exports: any;
}

declare module 'eslint/lib/config/config-cache' {
  declare module.exports: any;
}

declare module 'eslint/lib/config/config-file' {
  declare module.exports: any;
}

declare module 'eslint/lib/config/config-initializer' {
  declare module.exports: any;
}

declare module 'eslint/lib/config/config-ops' {
  declare module.exports: any;
}

declare module 'eslint/lib/config/config-rule' {
  declare module.exports: any;
}

declare module 'eslint/lib/config/config-validator' {
  declare module.exports: any;
}

declare module 'eslint/lib/config/environments' {
  declare module.exports: any;
}

declare module 'eslint/lib/config/plugins' {
  declare module.exports: any;
}

declare module 'eslint/lib/file-finder' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/checkstyle' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/codeframe' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/compact' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/html' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/jslint-xml' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/json' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/junit' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/stylish' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/table' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/tap' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/unix' {
  declare module.exports: any;
}

declare module 'eslint/lib/formatters/visualstudio' {
  declare module.exports: any;
}

declare module 'eslint/lib/ignored-paths' {
  declare module.exports: any;
}

declare module 'eslint/lib/internal-rules/internal-consistent-docs-description' {
  declare module.exports: any;
}

declare module 'eslint/lib/internal-rules/internal-no-invalid-meta' {
  declare module.exports: any;
}

declare module 'eslint/lib/linter' {
  declare module.exports: any;
}

declare module 'eslint/lib/load-rules' {
  declare module.exports: any;
}

declare module 'eslint/lib/logging' {
  declare module.exports: any;
}

declare module 'eslint/lib/options' {
  declare module.exports: any;
}

declare module 'eslint/lib/report-translator' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/accessor-pairs' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/array-bracket-newline' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/array-bracket-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/array-callback-return' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/array-element-newline' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/arrow-body-style' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/arrow-parens' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/arrow-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/block-scoped-var' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/block-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/brace-style' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/callback-return' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/camelcase' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/capitalized-comments' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/class-methods-use-this' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/comma-dangle' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/comma-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/comma-style' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/complexity' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/computed-property-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/consistent-return' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/consistent-this' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/constructor-super' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/curly' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/default-case' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/dot-location' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/dot-notation' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/eol-last' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/eqeqeq' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/for-direction' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/func-call-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/func-name-matching' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/func-names' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/func-style' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/function-paren-newline' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/generator-star-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/getter-return' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/global-require' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/guard-for-in' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/handle-callback-err' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/id-blacklist' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/id-length' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/id-match' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/indent-legacy' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/indent' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/init-declarations' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/jsx-quotes' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/key-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/keyword-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/line-comment-position' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/linebreak-style' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/lines-around-comment' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/lines-around-directive' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/max-depth' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/max-len' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/max-lines' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/max-nested-callbacks' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/max-params' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/max-statements-per-line' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/max-statements' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/multiline-ternary' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/new-cap' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/new-parens' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/newline-after-var' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/newline-before-return' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/newline-per-chained-call' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-alert' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-array-constructor' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-await-in-loop' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-bitwise' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-buffer-constructor' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-caller' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-case-declarations' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-catch-shadow' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-class-assign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-compare-neg-zero' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-cond-assign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-confusing-arrow' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-console' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-const-assign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-constant-condition' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-continue' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-control-regex' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-debugger' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-delete-var' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-div-regex' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-dupe-args' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-dupe-class-members' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-dupe-keys' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-duplicate-case' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-duplicate-imports' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-else-return' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-empty-character-class' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-empty-function' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-empty-pattern' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-empty' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-eq-null' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-eval' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-ex-assign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-extend-native' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-extra-bind' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-extra-boolean-cast' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-extra-label' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-extra-parens' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-extra-semi' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-fallthrough' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-floating-decimal' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-func-assign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-global-assign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-implicit-coercion' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-implicit-globals' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-implied-eval' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-inline-comments' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-inner-declarations' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-invalid-regexp' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-invalid-this' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-irregular-whitespace' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-iterator' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-label-var' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-labels' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-lone-blocks' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-lonely-if' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-loop-func' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-magic-numbers' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-mixed-operators' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-mixed-requires' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-mixed-spaces-and-tabs' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-multi-assign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-multi-spaces' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-multi-str' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-multiple-empty-lines' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-native-reassign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-negated-condition' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-negated-in-lhs' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-nested-ternary' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-new-func' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-new-object' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-new-require' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-new-symbol' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-new-wrappers' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-new' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-obj-calls' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-octal-escape' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-octal' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-param-reassign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-path-concat' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-plusplus' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-process-env' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-process-exit' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-proto' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-prototype-builtins' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-redeclare' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-regex-spaces' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-restricted-globals' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-restricted-imports' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-restricted-modules' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-restricted-properties' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-restricted-syntax' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-return-assign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-return-await' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-script-url' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-self-assign' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-self-compare' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-sequences' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-shadow-restricted-names' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-shadow' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-spaced-func' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-sparse-arrays' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-sync' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-tabs' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-template-curly-in-string' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-ternary' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-this-before-super' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-throw-literal' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-trailing-spaces' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-undef-init' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-undef' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-undefined' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-underscore-dangle' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-unexpected-multiline' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-unmodified-loop-condition' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-unneeded-ternary' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-unreachable' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-unsafe-finally' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-unsafe-negation' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-unused-expressions' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-unused-labels' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-unused-vars' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-use-before-define' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-useless-call' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-useless-computed-key' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-useless-concat' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-useless-constructor' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-useless-escape' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-useless-rename' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-useless-return' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-var' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-void' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-warning-comments' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-whitespace-before-property' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/no-with' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/nonblock-statement-body-position' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/object-curly-newline' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/object-curly-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/object-property-newline' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/object-shorthand' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/one-var-declaration-per-line' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/one-var' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/operator-assignment' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/operator-linebreak' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/padded-blocks' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/padding-line-between-statements' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/prefer-arrow-callback' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/prefer-const' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/prefer-destructuring' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/prefer-numeric-literals' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/prefer-promise-reject-errors' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/prefer-reflect' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/prefer-rest-params' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/prefer-spread' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/prefer-template' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/quote-props' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/quotes' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/radix' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/require-await' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/require-jsdoc' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/require-yield' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/rest-spread-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/semi-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/semi-style' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/semi' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/sort-imports' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/sort-keys' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/sort-vars' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/space-before-blocks' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/space-before-function-paren' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/space-in-parens' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/space-infix-ops' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/space-unary-ops' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/spaced-comment' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/strict' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/switch-colon-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/symbol-description' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/template-curly-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/template-tag-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/unicode-bom' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/use-isnan' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/valid-jsdoc' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/valid-typeof' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/vars-on-top' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/wrap-iife' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/wrap-regex' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/yield-star-spacing' {
  declare module.exports: any;
}

declare module 'eslint/lib/rules/yoda' {
  declare module.exports: any;
}

declare module 'eslint/lib/testers/rule-tester' {
  declare module.exports: any;
}

declare module 'eslint/lib/timing' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/backward-token-comment-cursor' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/backward-token-cursor' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/cursor' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/cursors' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/decorative-cursor' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/filter-cursor' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/forward-token-comment-cursor' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/forward-token-cursor' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/index' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/limit-cursor' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/padded-token-cursor' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/skip-cursor' {
  declare module.exports: any;
}

declare module 'eslint/lib/token-store/utils' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/ajv' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/apply-disable-directives' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/fix-tracker' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/glob-util' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/glob' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/hash' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/keywords' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/module-resolver' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/node-event-generator' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/npm-util' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/path-util' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/patterns/letters' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/rule-fixer' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/source-code-fixer' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/source-code-util' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/source-code' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/traverser' {
  declare module.exports: any;
}

declare module 'eslint/lib/util/xml-escape' {
  declare module.exports: any;
}

declare module 'eslint/Makefile' {
  declare module.exports: any;
}

declare module 'eslint/packages/eslint-config-eslint/index' {
  declare module.exports: any;
}

declare module 'eslint/tests/bench/bench' {
  declare module.exports: any;
}

declare module 'eslint/tests/bench/large' {
  declare module.exports: any;
}

declare module 'eslint/tests/bench/medium' {
  declare module.exports: any;
}

declare module 'eslint/tests/bench/small' {
  declare module.exports: any;
}

declare module 'eslint/tests/bench/xform-rules' {
  declare module.exports: any;
}

declare module 'eslint/tests/bin/eslint' {
  declare module.exports: any;
}

declare module 'eslint/tests/conf/config-schema' {
  declare module.exports: any;
}

declare module 'eslint/tests/conf/eslint-all' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/autoconfig/source-with-comments' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/autoconfig/source' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/autofix-integration/left-pad-expected-quiet' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/autofix-integration/left-pad-expected' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/autofix-integration/left-pad' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/autofix/return-conflicting-fixes.expected' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/autofix/return-conflicting-fixes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/autofix/semicolon-conflicting-fixes.expected' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/autofix/semicolon-conflicting-fixes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/cache/src/fail-file' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/cache/src/file-to-delete' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/cache/src/test-file' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/cache/src/test-file2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/cli-engine/console' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/cli-engine/nested_node_modules/passing' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/cli-engine/nested_node_modules/subdir/node_modules/text' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/cli-engine/node_modules/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/cli/passing' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/cli/syntax-error' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/block-and-break-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/block-and-break-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/block-and-break-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/block-and-break-4' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/default-params--nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/default-params--simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/do-while--break-always' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/do-while--break-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/do-while--break-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/do-while--break-simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/do-while--continue-always' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/do-while--continue-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/do-while--continue-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/do-while--continue-simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/do-while--empty' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/do-while--simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--break-always' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--break-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--break-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--break-simple-no-test' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--break-simple-no-update' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--break-simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-always' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-simple-no-test' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-simple-no-update' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--direct-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--empty' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--simple-fork-in-test-update' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--simple-no-test' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--simple-no-update' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--simple-test-true' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for--simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--break-always' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--break-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--break-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--break-simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--continue-always' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--continue-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--continue-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--continue-simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--direct-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--empty' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-in--simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--break-always' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--break-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--break-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--break-simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--continue-always' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--continue-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--continue-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--continue-simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--direct-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--empty' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/for-of--simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/function--in-condition-expr' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/function--in-logical-right' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/function--simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/if-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/if-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/if-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/if-4' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/if-5' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/if-6' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-and-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-and-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-mix-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-mix-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-or-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-or-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-and-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-and-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-and-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-mix-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-mix-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-mix-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-or-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-or-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-or-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-and-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-and-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-and-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-and-4' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-and-5' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-mix-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-mix-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-or-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-or-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-or-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-or-4' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-or-5' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--simple-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--simple-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-and-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-and-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-mix-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-mix-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-or-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-or-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--cases-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--cases-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--cases-and-default-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--cases-and-default-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--cases-and-default-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--default-only-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--default-only-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--empty' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--precedence' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--single-case-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/switch--single-case-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-4' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-finally-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-finally-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-finally-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-finally-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-finally-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-finally-3' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-finally-4' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/try--try-finally-5' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/unreachable-controls' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--break-always' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--break-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--break-nest-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--break-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--break-simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--continue-always' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--continue-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--continue-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--continue-simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--direct-nest' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--empty' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/code-path-analysis/while--simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-extends/package2/subdir/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-extends/resolving-relatively/node_modules/a/index' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-extends/resolving-relatively/node_modules/a/node_modules/b/index' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-extends/scoped-package3/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-file/extends-chain-2/node_modules/eslint-config-a/index' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-file/extends-chain-2/node_modules/eslint-config-a/relative' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-file/extends-chain/node_modules/eslint-config-a/index' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-file/extends-chain/node_modules/eslint-config-a/node_modules/eslint-config-b/index' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-file/extends-chain/node_modules/eslint-config-a/node_modules/eslint-config-b/node_modules/eslint-config-c/index' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-file/js/node_modules/foo/index' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-file/js/not-a-config' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/broken/console-wrong-quotes-node' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/broken/console-wrong-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/broken/plugins/console-wrong-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/broken/plugins2/console-wrong-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/broken/process-exit' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/broken/subbroken/console-wrong-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/broken/subbroken/subsubbroken/console-wrong-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/broken/wrong-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/envs/sub/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/packagejson/subdir/subsubdir/subsubsubdir/wrong-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/packagejson/subdir/subsubdir/wrong-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/packagejson/subdir/wrong-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/packagejson/wrong-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/root-true/parent/root/wrong-semi' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/shared/a/index' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-hierarchy/shared/b/index' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-initializer/lib/doubleQuotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-initializer/lib/no-semi' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-initializer/parse-error/parse-error' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-initializer/singleQuotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-initializer/tests/console-log' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-initializer/tests/doubleQuotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/config-rule/schemas' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/configurations/parser/custom' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/disable-inline-config' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/eslintrc/quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/files/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/fixmode/multipass' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/fixmode/ok' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/fixmode/quotes-semi-eqeqeq' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/fixmode/quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/fixture-parser' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/formatters/broken' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/formatters/simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/formatters/test/simple' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/glob-util/ignored/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/glob-util/node_modules/dependency' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/glob-util/one-js-file/baz' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/glob-util/two-js-files/bar' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/glob-util/two-js-files/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/globals-browser' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/globals-nashorn' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/globals-node' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/globals-webextensions' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/ignored-paths/bower_components/package/file' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/ignored-paths/negation/ignore' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/ignored-paths/negation/unignore' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/ignored-paths/node_modules/package/file' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/ignored-paths/subdir/bower_components/package/file' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/ignored-paths/subdir/node_modules/package/file' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/ignored-paths/subdir/undef' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/ignored-paths/undef' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/ignored-paths/unignored' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/max-warnings/six-warnings' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/missing-semicolon' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/module-resolver/node_modules/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/packagejson/quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/array-bracket-spacing/flow-destructuring-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/array-bracket-spacing/flow-destructuring-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/arrow-parens/identifer-type' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/arrow-parens/return-type' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/babel-eslint5/destructuring-object-spread' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/babel-eslint7/array-pattern-with-annotation' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/babel-eslint7/function-type-annotation' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/babel-eslint7/object-pattern-with-annotation' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/babel-eslint7/object-pattern-with-object-annotation' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/comma-dangle/object-pattern-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/comma-dangle/object-pattern-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/comma-dangle/return-type-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/comma-dangle/return-type-2' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/enhanced-parser' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/line-error' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/no-line-error' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/object-curly-spacing/flow-stub-parser-never-invalid' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/object-curly-spacing/flow-stub-parser-never-valid' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/stub-parser' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/throws-with-options' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/type-annotations/function-declaration-type-annotation-no-space' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/type-annotations/function-expression-type-annotation' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/type-annotations/function-parameter-type-annotation' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/type-annotations/function-return-type-annotation' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/type-annotations/variable-declaration-init-type-annotation-no-space' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/type-annotations/variable-declaration-init-type-annotation' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-class-methods' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-class' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-keywords-class-method' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-static-class-methods' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/typescript-parsers/keyword-with-arrow-function' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/typescript-parsers/new-parens' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/abstract-class-invalid' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/abstract-class-valid' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/functions-with-abstract-class-invalid' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/functions-with-abstract-class-valid' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/interface' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/namespace-invalid' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/namespace-valid' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/namespace-with-functions-with-abstract-class-invalid' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/namespace-with-functions-with-abstract-class-valid' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/variable-declarator-type-indent-two-spaces' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/parsers/unknown-nodes/variable-declarator-type-no-indent' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/passing-es7' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/passing' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/process-exit' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/processors/custom-processor' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/custom-rule' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/dir1/no-strings' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/dir2/no-literals' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/fixture-rule' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/indent-legacy/indent-invalid-fixture-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/indent-legacy/indent-valid-fixture-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/indent/indent-invalid-fixture-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/indent/indent-valid-fixture-1' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/make-syntax-error-rule' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/test-multi-rulesdirs' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/test/test-custom-rule' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/rules/wrong/custom-rule' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/shebang' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/single-quoted' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/source-code-util/bar' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/source-code-util/ext/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/source-code-util/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/source-code-util/ignored' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/source-code-util/jsx/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/source-code-util/nested/bar' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/source-code-util/nested/foo' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/source-code-util/parse-error/parse-error' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/syntax-error' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/fixes-one-problem' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/modify-ast-at-first' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/modify-ast-at-last' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/modify-ast' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/no-eval' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/no-invalid-args' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/no-invalid-schema' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/no-schema-violation' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/no-test-global' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/no-test-settings' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/testers/rule-tester/no-var' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/traverse/found' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/undef' {
  declare module.exports: any;
}

declare module 'eslint/tests/fixtures/utf8-bom' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/api' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/ast-utils' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/cli-engine' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/cli' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/code-path-analysis/code-path-analyzer' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/code-path-analysis/code-path' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/config' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/config/autoconfig' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/config/config-file' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/config/config-initializer' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/config/config-ops' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/config/config-rule' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/config/config-validator' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/config/environments' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/config/plugins' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/file-finder' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/checkstyle' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/codeframe' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/compact' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/html' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/jslint-xml' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/json' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/junit' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/stylish' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/table' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/tap' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/unix' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/formatters/visualstudio' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/ignored-paths' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/internal-rules/internal-consistent-docs-description' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/internal-rules/internal-no-invalid-meta' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/linter' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/options' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/report-translator' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/_set-default-parser' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/accessor-pairs' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/array-bracket-newline' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/array-bracket-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/array-callback-return' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/array-element-newline' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/arrow-body-style' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/arrow-parens' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/arrow-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/block-scoped-var' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/block-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/brace-style' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/callback-return' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/camelcase' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/capitalized-comments' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/class-methods-use-this' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/comma-dangle' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/comma-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/comma-style' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/complexity' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/computed-property-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/consistent-return' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/consistent-this' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/constructor-super' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/curly' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/default-case' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/dot-location' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/dot-notation' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/eol-last' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/eqeqeq' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/for-direction' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/func-call-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/func-name-matching' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/func-names' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/func-style' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/function-paren-newline' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/generator-star-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/getter-return' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/global-require' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/guard-for-in' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/handle-callback-err' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/id-blacklist' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/id-length' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/id-match' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/indent-legacy' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/indent' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/init-declarations' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/jsx-quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/key-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/keyword-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/line-comment-position' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/linebreak-style' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/lines-around-comment' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/lines-around-directive' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/max-depth' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/max-len' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/max-lines' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/max-nested-callbacks' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/max-params' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/max-statements-per-line' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/max-statements' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/multiline-ternary' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/new-cap' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/new-parens' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/newline-after-var' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/newline-before-return' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/newline-per-chained-call' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-alert' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-array-constructor' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-await-in-loop' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-bitwise' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-buffer-constructor' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-caller' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-case-declarations' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-catch-shadow' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-class-assign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-compare-neg-zero' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-cond-assign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-confusing-arrow' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-console' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-const-assign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-constant-condition' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-continue' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-control-regex' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-debugger' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-delete-var' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-div-regex' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-dupe-args' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-dupe-class-members' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-dupe-keys' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-duplicate-case' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-duplicate-imports' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-else-return' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-empty-character-class' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-empty-function' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-empty-pattern' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-empty' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-eq-null' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-eval' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-ex-assign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-extend-native' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-extra-bind' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-extra-boolean-cast' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-extra-label' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-extra-parens' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-extra-semi' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-fallthrough' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-floating-decimal' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-func-assign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-global-assign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-implicit-coercion' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-implicit-globals' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-implied-eval' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-inline-comments' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-inner-declarations' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-invalid-regexp' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-invalid-this' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-irregular-whitespace' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-iterator' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-label-var' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-labels' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-lone-blocks' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-lonely-if' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-loop-func' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-magic-numbers' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-mixed-operators' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-mixed-requires' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-mixed-spaces-and-tabs' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-multi-assign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-multi-spaces' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-multi-str' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-multiple-empty-lines' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-native-reassign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-negated-condition' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-negated-in-lhs' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-nested-ternary' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-new-func' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-new-object' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-new-require' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-new-symbol' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-new-wrappers' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-new' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-obj-calls' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-octal-escape' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-octal' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-param-reassign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-path-concat' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-plusplus' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-process-env' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-process-exit' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-proto' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-prototype-builtins' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-redeclare' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-regex-spaces' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-restricted-globals' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-restricted-imports' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-restricted-modules' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-restricted-properties' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-restricted-syntax' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-return-assign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-return-await' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-script-url' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-self-assign' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-self-compare' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-sequences' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-shadow-restricted-names' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-shadow' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-spaced-func' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-sparse-arrays' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-sync' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-tabs' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-template-curly-in-string' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-ternary' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-this-before-super' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-throw-literal' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-trailing-spaces' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-undef-init' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-undef' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-undefined' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-underscore-dangle' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-unexpected-multiline' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-unmodified-loop-condition' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-unneeded-ternary' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-unreachable' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-unsafe-finally' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-unsafe-negation' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-unused-expressions' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-unused-labels' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-unused-vars' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-use-before-define' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-useless-call' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-useless-computed-key' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-useless-concat' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-useless-constructor' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-useless-escape' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-useless-rename' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-useless-return' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-var' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-void' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-warning-comments' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-whitespace-before-property' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/no-with' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/nonblock-statement-body-position' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/object-curly-newline' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/object-curly-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/object-property-newline' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/object-shorthand' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/one-var-declaration-per-line' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/one-var' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/operator-assignment' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/operator-linebreak' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/padded-blocks' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/padding-line-between-statements' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/prefer-arrow-callback' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/prefer-const' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/prefer-destructuring' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/prefer-numeric-literals' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/prefer-promise-reject-errors' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/prefer-reflect' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/prefer-rest-params' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/prefer-spread' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/prefer-template' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/quote-props' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/quotes' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/radix' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/require-await' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/require-jsdoc' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/require-yield' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/rest-spread-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/semi-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/semi-style' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/semi' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/sort-imports' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/sort-keys' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/sort-vars' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/space-before-blocks' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/space-before-function-paren' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/space-in-parens' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/space-infix-ops' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/space-unary-ops' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/spaced-comment' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/strict' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/switch-colon-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/symbol-description' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/template-curly-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/template-tag-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/unicode-bom' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/use-isnan' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/valid-jsdoc' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/valid-typeof' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/vars-on-top' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/wrap-iife' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/wrap-regex' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/yield-star-spacing' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/rules/yoda' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/testers/rule-tester' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/token-store' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/apply-disable-directives' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/fix-tracker' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/glob-util' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/module-resolver' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/node-event-generator' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/npm-util' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/path-util' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/rule-fixer' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/source-code-fixer' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/source-code-util' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/source-code' {
  declare module.exports: any;
}

declare module 'eslint/tests/lib/util/traverser' {
  declare module.exports: any;
}

declare module 'eslint/tests/performance/jshint' {
  declare module.exports: any;
}

declare module 'eslint/tests/templates/pr-create.md.ejs' {
  declare module.exports: any;
}

declare module 'eslint/tests/tools/eslint-fuzzer' {
  declare module.exports: any;
}

declare module 'eslint/tools/eslint-fuzzer' {
  declare module.exports: any;
}

declare module 'eslint/tools/fuzzer-runner' {
  declare module.exports: any;
}

declare module 'eslint/tools/internal-testers/event-generator-tester' {
  declare module.exports: any;
}

declare module 'eslint/tools/internal-testers/test-parser' {
  declare module.exports: any;
}

// Filename aliases
declare module 'eslint/bin/eslint.js' {
  declare module.exports: $Exports<'eslint/bin/eslint'>;
}
declare module 'eslint/conf/config-schema.js' {
  declare module.exports: $Exports<'eslint/conf/config-schema'>;
}
declare module 'eslint/conf/default-cli-options.js' {
  declare module.exports: $Exports<'eslint/conf/default-cli-options'>;
}
declare module 'eslint/conf/default-config-options.js' {
  declare module.exports: $Exports<'eslint/conf/default-config-options'>;
}
declare module 'eslint/conf/environments.js' {
  declare module.exports: $Exports<'eslint/conf/environments'>;
}
declare module 'eslint/conf/eslint-all.js' {
  declare module.exports: $Exports<'eslint/conf/eslint-all'>;
}
declare module 'eslint/conf/eslint-recommended.js' {
  declare module.exports: $Exports<'eslint/conf/eslint-recommended'>;
}
declare module 'eslint/karma.conf.js' {
  declare module.exports: $Exports<'eslint/karma.conf'>;
}
declare module 'eslint/lib/api.js' {
  declare module.exports: $Exports<'eslint/lib/api'>;
}
declare module 'eslint/lib/ast-utils.js' {
  declare module.exports: $Exports<'eslint/lib/ast-utils'>;
}
declare module 'eslint/lib/cli-engine.js' {
  declare module.exports: $Exports<'eslint/lib/cli-engine'>;
}
declare module 'eslint/lib/cli.js' {
  declare module.exports: $Exports<'eslint/lib/cli'>;
}
declare module 'eslint/lib/code-path-analysis/code-path-analyzer.js' {
  declare module.exports: $Exports<
    'eslint/lib/code-path-analysis/code-path-analyzer'
  >;
}
declare module 'eslint/lib/code-path-analysis/code-path-segment.js' {
  declare module.exports: $Exports<
    'eslint/lib/code-path-analysis/code-path-segment'
  >;
}
declare module 'eslint/lib/code-path-analysis/code-path-state.js' {
  declare module.exports: $Exports<
    'eslint/lib/code-path-analysis/code-path-state'
  >;
}
declare module 'eslint/lib/code-path-analysis/code-path.js' {
  declare module.exports: $Exports<'eslint/lib/code-path-analysis/code-path'>;
}
declare module 'eslint/lib/code-path-analysis/debug-helpers.js' {
  declare module.exports: $Exports<
    'eslint/lib/code-path-analysis/debug-helpers'
  >;
}
declare module 'eslint/lib/code-path-analysis/fork-context.js' {
  declare module.exports: $Exports<
    'eslint/lib/code-path-analysis/fork-context'
  >;
}
declare module 'eslint/lib/code-path-analysis/id-generator.js' {
  declare module.exports: $Exports<
    'eslint/lib/code-path-analysis/id-generator'
  >;
}
declare module 'eslint/lib/config.js' {
  declare module.exports: $Exports<'eslint/lib/config'>;
}
declare module 'eslint/lib/config/autoconfig.js' {
  declare module.exports: $Exports<'eslint/lib/config/autoconfig'>;
}
declare module 'eslint/lib/config/config-cache.js' {
  declare module.exports: $Exports<'eslint/lib/config/config-cache'>;
}
declare module 'eslint/lib/config/config-file.js' {
  declare module.exports: $Exports<'eslint/lib/config/config-file'>;
}
declare module 'eslint/lib/config/config-initializer.js' {
  declare module.exports: $Exports<'eslint/lib/config/config-initializer'>;
}
declare module 'eslint/lib/config/config-ops.js' {
  declare module.exports: $Exports<'eslint/lib/config/config-ops'>;
}
declare module 'eslint/lib/config/config-rule.js' {
  declare module.exports: $Exports<'eslint/lib/config/config-rule'>;
}
declare module 'eslint/lib/config/config-validator.js' {
  declare module.exports: $Exports<'eslint/lib/config/config-validator'>;
}
declare module 'eslint/lib/config/environments.js' {
  declare module.exports: $Exports<'eslint/lib/config/environments'>;
}
declare module 'eslint/lib/config/plugins.js' {
  declare module.exports: $Exports<'eslint/lib/config/plugins'>;
}
declare module 'eslint/lib/file-finder.js' {
  declare module.exports: $Exports<'eslint/lib/file-finder'>;
}
declare module 'eslint/lib/formatters/checkstyle.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/checkstyle'>;
}
declare module 'eslint/lib/formatters/codeframe.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/codeframe'>;
}
declare module 'eslint/lib/formatters/compact.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/compact'>;
}
declare module 'eslint/lib/formatters/html.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/html'>;
}
declare module 'eslint/lib/formatters/jslint-xml.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/jslint-xml'>;
}
declare module 'eslint/lib/formatters/json.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/json'>;
}
declare module 'eslint/lib/formatters/junit.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/junit'>;
}
declare module 'eslint/lib/formatters/stylish.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/stylish'>;
}
declare module 'eslint/lib/formatters/table.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/table'>;
}
declare module 'eslint/lib/formatters/tap.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/tap'>;
}
declare module 'eslint/lib/formatters/unix.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/unix'>;
}
declare module 'eslint/lib/formatters/visualstudio.js' {
  declare module.exports: $Exports<'eslint/lib/formatters/visualstudio'>;
}
declare module 'eslint/lib/ignored-paths.js' {
  declare module.exports: $Exports<'eslint/lib/ignored-paths'>;
}
declare module 'eslint/lib/internal-rules/internal-consistent-docs-description.js' {
  declare module.exports: $Exports<
    'eslint/lib/internal-rules/internal-consistent-docs-description'
  >;
}
declare module 'eslint/lib/internal-rules/internal-no-invalid-meta.js' {
  declare module.exports: $Exports<
    'eslint/lib/internal-rules/internal-no-invalid-meta'
  >;
}
declare module 'eslint/lib/linter.js' {
  declare module.exports: $Exports<'eslint/lib/linter'>;
}
declare module 'eslint/lib/load-rules.js' {
  declare module.exports: $Exports<'eslint/lib/load-rules'>;
}
declare module 'eslint/lib/logging.js' {
  declare module.exports: $Exports<'eslint/lib/logging'>;
}
declare module 'eslint/lib/options.js' {
  declare module.exports: $Exports<'eslint/lib/options'>;
}
declare module 'eslint/lib/report-translator.js' {
  declare module.exports: $Exports<'eslint/lib/report-translator'>;
}
declare module 'eslint/lib/rules.js' {
  declare module.exports: $Exports<'eslint/lib/rules'>;
}
declare module 'eslint/lib/rules/accessor-pairs.js' {
  declare module.exports: $Exports<'eslint/lib/rules/accessor-pairs'>;
}
declare module 'eslint/lib/rules/array-bracket-newline.js' {
  declare module.exports: $Exports<'eslint/lib/rules/array-bracket-newline'>;
}
declare module 'eslint/lib/rules/array-bracket-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/array-bracket-spacing'>;
}
declare module 'eslint/lib/rules/array-callback-return.js' {
  declare module.exports: $Exports<'eslint/lib/rules/array-callback-return'>;
}
declare module 'eslint/lib/rules/array-element-newline.js' {
  declare module.exports: $Exports<'eslint/lib/rules/array-element-newline'>;
}
declare module 'eslint/lib/rules/arrow-body-style.js' {
  declare module.exports: $Exports<'eslint/lib/rules/arrow-body-style'>;
}
declare module 'eslint/lib/rules/arrow-parens.js' {
  declare module.exports: $Exports<'eslint/lib/rules/arrow-parens'>;
}
declare module 'eslint/lib/rules/arrow-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/arrow-spacing'>;
}
declare module 'eslint/lib/rules/block-scoped-var.js' {
  declare module.exports: $Exports<'eslint/lib/rules/block-scoped-var'>;
}
declare module 'eslint/lib/rules/block-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/block-spacing'>;
}
declare module 'eslint/lib/rules/brace-style.js' {
  declare module.exports: $Exports<'eslint/lib/rules/brace-style'>;
}
declare module 'eslint/lib/rules/callback-return.js' {
  declare module.exports: $Exports<'eslint/lib/rules/callback-return'>;
}
declare module 'eslint/lib/rules/camelcase.js' {
  declare module.exports: $Exports<'eslint/lib/rules/camelcase'>;
}
declare module 'eslint/lib/rules/capitalized-comments.js' {
  declare module.exports: $Exports<'eslint/lib/rules/capitalized-comments'>;
}
declare module 'eslint/lib/rules/class-methods-use-this.js' {
  declare module.exports: $Exports<'eslint/lib/rules/class-methods-use-this'>;
}
declare module 'eslint/lib/rules/comma-dangle.js' {
  declare module.exports: $Exports<'eslint/lib/rules/comma-dangle'>;
}
declare module 'eslint/lib/rules/comma-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/comma-spacing'>;
}
declare module 'eslint/lib/rules/comma-style.js' {
  declare module.exports: $Exports<'eslint/lib/rules/comma-style'>;
}
declare module 'eslint/lib/rules/complexity.js' {
  declare module.exports: $Exports<'eslint/lib/rules/complexity'>;
}
declare module 'eslint/lib/rules/computed-property-spacing.js' {
  declare module.exports: $Exports<
    'eslint/lib/rules/computed-property-spacing'
  >;
}
declare module 'eslint/lib/rules/consistent-return.js' {
  declare module.exports: $Exports<'eslint/lib/rules/consistent-return'>;
}
declare module 'eslint/lib/rules/consistent-this.js' {
  declare module.exports: $Exports<'eslint/lib/rules/consistent-this'>;
}
declare module 'eslint/lib/rules/constructor-super.js' {
  declare module.exports: $Exports<'eslint/lib/rules/constructor-super'>;
}
declare module 'eslint/lib/rules/curly.js' {
  declare module.exports: $Exports<'eslint/lib/rules/curly'>;
}
declare module 'eslint/lib/rules/default-case.js' {
  declare module.exports: $Exports<'eslint/lib/rules/default-case'>;
}
declare module 'eslint/lib/rules/dot-location.js' {
  declare module.exports: $Exports<'eslint/lib/rules/dot-location'>;
}
declare module 'eslint/lib/rules/dot-notation.js' {
  declare module.exports: $Exports<'eslint/lib/rules/dot-notation'>;
}
declare module 'eslint/lib/rules/eol-last.js' {
  declare module.exports: $Exports<'eslint/lib/rules/eol-last'>;
}
declare module 'eslint/lib/rules/eqeqeq.js' {
  declare module.exports: $Exports<'eslint/lib/rules/eqeqeq'>;
}
declare module 'eslint/lib/rules/for-direction.js' {
  declare module.exports: $Exports<'eslint/lib/rules/for-direction'>;
}
declare module 'eslint/lib/rules/func-call-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/func-call-spacing'>;
}
declare module 'eslint/lib/rules/func-name-matching.js' {
  declare module.exports: $Exports<'eslint/lib/rules/func-name-matching'>;
}
declare module 'eslint/lib/rules/func-names.js' {
  declare module.exports: $Exports<'eslint/lib/rules/func-names'>;
}
declare module 'eslint/lib/rules/func-style.js' {
  declare module.exports: $Exports<'eslint/lib/rules/func-style'>;
}
declare module 'eslint/lib/rules/function-paren-newline.js' {
  declare module.exports: $Exports<'eslint/lib/rules/function-paren-newline'>;
}
declare module 'eslint/lib/rules/generator-star-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/generator-star-spacing'>;
}
declare module 'eslint/lib/rules/getter-return.js' {
  declare module.exports: $Exports<'eslint/lib/rules/getter-return'>;
}
declare module 'eslint/lib/rules/global-require.js' {
  declare module.exports: $Exports<'eslint/lib/rules/global-require'>;
}
declare module 'eslint/lib/rules/guard-for-in.js' {
  declare module.exports: $Exports<'eslint/lib/rules/guard-for-in'>;
}
declare module 'eslint/lib/rules/handle-callback-err.js' {
  declare module.exports: $Exports<'eslint/lib/rules/handle-callback-err'>;
}
declare module 'eslint/lib/rules/id-blacklist.js' {
  declare module.exports: $Exports<'eslint/lib/rules/id-blacklist'>;
}
declare module 'eslint/lib/rules/id-length.js' {
  declare module.exports: $Exports<'eslint/lib/rules/id-length'>;
}
declare module 'eslint/lib/rules/id-match.js' {
  declare module.exports: $Exports<'eslint/lib/rules/id-match'>;
}
declare module 'eslint/lib/rules/indent-legacy.js' {
  declare module.exports: $Exports<'eslint/lib/rules/indent-legacy'>;
}
declare module 'eslint/lib/rules/indent.js' {
  declare module.exports: $Exports<'eslint/lib/rules/indent'>;
}
declare module 'eslint/lib/rules/init-declarations.js' {
  declare module.exports: $Exports<'eslint/lib/rules/init-declarations'>;
}
declare module 'eslint/lib/rules/jsx-quotes.js' {
  declare module.exports: $Exports<'eslint/lib/rules/jsx-quotes'>;
}
declare module 'eslint/lib/rules/key-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/key-spacing'>;
}
declare module 'eslint/lib/rules/keyword-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/keyword-spacing'>;
}
declare module 'eslint/lib/rules/line-comment-position.js' {
  declare module.exports: $Exports<'eslint/lib/rules/line-comment-position'>;
}
declare module 'eslint/lib/rules/linebreak-style.js' {
  declare module.exports: $Exports<'eslint/lib/rules/linebreak-style'>;
}
declare module 'eslint/lib/rules/lines-around-comment.js' {
  declare module.exports: $Exports<'eslint/lib/rules/lines-around-comment'>;
}
declare module 'eslint/lib/rules/lines-around-directive.js' {
  declare module.exports: $Exports<'eslint/lib/rules/lines-around-directive'>;
}
declare module 'eslint/lib/rules/max-depth.js' {
  declare module.exports: $Exports<'eslint/lib/rules/max-depth'>;
}
declare module 'eslint/lib/rules/max-len.js' {
  declare module.exports: $Exports<'eslint/lib/rules/max-len'>;
}
declare module 'eslint/lib/rules/max-lines.js' {
  declare module.exports: $Exports<'eslint/lib/rules/max-lines'>;
}
declare module 'eslint/lib/rules/max-nested-callbacks.js' {
  declare module.exports: $Exports<'eslint/lib/rules/max-nested-callbacks'>;
}
declare module 'eslint/lib/rules/max-params.js' {
  declare module.exports: $Exports<'eslint/lib/rules/max-params'>;
}
declare module 'eslint/lib/rules/max-statements-per-line.js' {
  declare module.exports: $Exports<'eslint/lib/rules/max-statements-per-line'>;
}
declare module 'eslint/lib/rules/max-statements.js' {
  declare module.exports: $Exports<'eslint/lib/rules/max-statements'>;
}
declare module 'eslint/lib/rules/multiline-ternary.js' {
  declare module.exports: $Exports<'eslint/lib/rules/multiline-ternary'>;
}
declare module 'eslint/lib/rules/new-cap.js' {
  declare module.exports: $Exports<'eslint/lib/rules/new-cap'>;
}
declare module 'eslint/lib/rules/new-parens.js' {
  declare module.exports: $Exports<'eslint/lib/rules/new-parens'>;
}
declare module 'eslint/lib/rules/newline-after-var.js' {
  declare module.exports: $Exports<'eslint/lib/rules/newline-after-var'>;
}
declare module 'eslint/lib/rules/newline-before-return.js' {
  declare module.exports: $Exports<'eslint/lib/rules/newline-before-return'>;
}
declare module 'eslint/lib/rules/newline-per-chained-call.js' {
  declare module.exports: $Exports<'eslint/lib/rules/newline-per-chained-call'>;
}
declare module 'eslint/lib/rules/no-alert.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-alert'>;
}
declare module 'eslint/lib/rules/no-array-constructor.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-array-constructor'>;
}
declare module 'eslint/lib/rules/no-await-in-loop.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-await-in-loop'>;
}
declare module 'eslint/lib/rules/no-bitwise.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-bitwise'>;
}
declare module 'eslint/lib/rules/no-buffer-constructor.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-buffer-constructor'>;
}
declare module 'eslint/lib/rules/no-caller.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-caller'>;
}
declare module 'eslint/lib/rules/no-case-declarations.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-case-declarations'>;
}
declare module 'eslint/lib/rules/no-catch-shadow.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-catch-shadow'>;
}
declare module 'eslint/lib/rules/no-class-assign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-class-assign'>;
}
declare module 'eslint/lib/rules/no-compare-neg-zero.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-compare-neg-zero'>;
}
declare module 'eslint/lib/rules/no-cond-assign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-cond-assign'>;
}
declare module 'eslint/lib/rules/no-confusing-arrow.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-confusing-arrow'>;
}
declare module 'eslint/lib/rules/no-console.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-console'>;
}
declare module 'eslint/lib/rules/no-const-assign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-const-assign'>;
}
declare module 'eslint/lib/rules/no-constant-condition.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-constant-condition'>;
}
declare module 'eslint/lib/rules/no-continue.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-continue'>;
}
declare module 'eslint/lib/rules/no-control-regex.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-control-regex'>;
}
declare module 'eslint/lib/rules/no-debugger.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-debugger'>;
}
declare module 'eslint/lib/rules/no-delete-var.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-delete-var'>;
}
declare module 'eslint/lib/rules/no-div-regex.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-div-regex'>;
}
declare module 'eslint/lib/rules/no-dupe-args.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-dupe-args'>;
}
declare module 'eslint/lib/rules/no-dupe-class-members.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-dupe-class-members'>;
}
declare module 'eslint/lib/rules/no-dupe-keys.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-dupe-keys'>;
}
declare module 'eslint/lib/rules/no-duplicate-case.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-duplicate-case'>;
}
declare module 'eslint/lib/rules/no-duplicate-imports.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-duplicate-imports'>;
}
declare module 'eslint/lib/rules/no-else-return.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-else-return'>;
}
declare module 'eslint/lib/rules/no-empty-character-class.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-empty-character-class'>;
}
declare module 'eslint/lib/rules/no-empty-function.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-empty-function'>;
}
declare module 'eslint/lib/rules/no-empty-pattern.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-empty-pattern'>;
}
declare module 'eslint/lib/rules/no-empty.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-empty'>;
}
declare module 'eslint/lib/rules/no-eq-null.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-eq-null'>;
}
declare module 'eslint/lib/rules/no-eval.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-eval'>;
}
declare module 'eslint/lib/rules/no-ex-assign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-ex-assign'>;
}
declare module 'eslint/lib/rules/no-extend-native.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-extend-native'>;
}
declare module 'eslint/lib/rules/no-extra-bind.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-extra-bind'>;
}
declare module 'eslint/lib/rules/no-extra-boolean-cast.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-extra-boolean-cast'>;
}
declare module 'eslint/lib/rules/no-extra-label.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-extra-label'>;
}
declare module 'eslint/lib/rules/no-extra-parens.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-extra-parens'>;
}
declare module 'eslint/lib/rules/no-extra-semi.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-extra-semi'>;
}
declare module 'eslint/lib/rules/no-fallthrough.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-fallthrough'>;
}
declare module 'eslint/lib/rules/no-floating-decimal.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-floating-decimal'>;
}
declare module 'eslint/lib/rules/no-func-assign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-func-assign'>;
}
declare module 'eslint/lib/rules/no-global-assign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-global-assign'>;
}
declare module 'eslint/lib/rules/no-implicit-coercion.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-implicit-coercion'>;
}
declare module 'eslint/lib/rules/no-implicit-globals.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-implicit-globals'>;
}
declare module 'eslint/lib/rules/no-implied-eval.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-implied-eval'>;
}
declare module 'eslint/lib/rules/no-inline-comments.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-inline-comments'>;
}
declare module 'eslint/lib/rules/no-inner-declarations.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-inner-declarations'>;
}
declare module 'eslint/lib/rules/no-invalid-regexp.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-invalid-regexp'>;
}
declare module 'eslint/lib/rules/no-invalid-this.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-invalid-this'>;
}
declare module 'eslint/lib/rules/no-irregular-whitespace.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-irregular-whitespace'>;
}
declare module 'eslint/lib/rules/no-iterator.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-iterator'>;
}
declare module 'eslint/lib/rules/no-label-var.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-label-var'>;
}
declare module 'eslint/lib/rules/no-labels.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-labels'>;
}
declare module 'eslint/lib/rules/no-lone-blocks.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-lone-blocks'>;
}
declare module 'eslint/lib/rules/no-lonely-if.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-lonely-if'>;
}
declare module 'eslint/lib/rules/no-loop-func.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-loop-func'>;
}
declare module 'eslint/lib/rules/no-magic-numbers.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-magic-numbers'>;
}
declare module 'eslint/lib/rules/no-mixed-operators.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-mixed-operators'>;
}
declare module 'eslint/lib/rules/no-mixed-requires.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-mixed-requires'>;
}
declare module 'eslint/lib/rules/no-mixed-spaces-and-tabs.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-mixed-spaces-and-tabs'>;
}
declare module 'eslint/lib/rules/no-multi-assign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-multi-assign'>;
}
declare module 'eslint/lib/rules/no-multi-spaces.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-multi-spaces'>;
}
declare module 'eslint/lib/rules/no-multi-str.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-multi-str'>;
}
declare module 'eslint/lib/rules/no-multiple-empty-lines.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-multiple-empty-lines'>;
}
declare module 'eslint/lib/rules/no-native-reassign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-native-reassign'>;
}
declare module 'eslint/lib/rules/no-negated-condition.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-negated-condition'>;
}
declare module 'eslint/lib/rules/no-negated-in-lhs.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-negated-in-lhs'>;
}
declare module 'eslint/lib/rules/no-nested-ternary.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-nested-ternary'>;
}
declare module 'eslint/lib/rules/no-new-func.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-new-func'>;
}
declare module 'eslint/lib/rules/no-new-object.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-new-object'>;
}
declare module 'eslint/lib/rules/no-new-require.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-new-require'>;
}
declare module 'eslint/lib/rules/no-new-symbol.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-new-symbol'>;
}
declare module 'eslint/lib/rules/no-new-wrappers.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-new-wrappers'>;
}
declare module 'eslint/lib/rules/no-new.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-new'>;
}
declare module 'eslint/lib/rules/no-obj-calls.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-obj-calls'>;
}
declare module 'eslint/lib/rules/no-octal-escape.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-octal-escape'>;
}
declare module 'eslint/lib/rules/no-octal.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-octal'>;
}
declare module 'eslint/lib/rules/no-param-reassign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-param-reassign'>;
}
declare module 'eslint/lib/rules/no-path-concat.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-path-concat'>;
}
declare module 'eslint/lib/rules/no-plusplus.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-plusplus'>;
}
declare module 'eslint/lib/rules/no-process-env.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-process-env'>;
}
declare module 'eslint/lib/rules/no-process-exit.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-process-exit'>;
}
declare module 'eslint/lib/rules/no-proto.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-proto'>;
}
declare module 'eslint/lib/rules/no-prototype-builtins.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-prototype-builtins'>;
}
declare module 'eslint/lib/rules/no-redeclare.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-redeclare'>;
}
declare module 'eslint/lib/rules/no-regex-spaces.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-regex-spaces'>;
}
declare module 'eslint/lib/rules/no-restricted-globals.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-restricted-globals'>;
}
declare module 'eslint/lib/rules/no-restricted-imports.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-restricted-imports'>;
}
declare module 'eslint/lib/rules/no-restricted-modules.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-restricted-modules'>;
}
declare module 'eslint/lib/rules/no-restricted-properties.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-restricted-properties'>;
}
declare module 'eslint/lib/rules/no-restricted-syntax.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-restricted-syntax'>;
}
declare module 'eslint/lib/rules/no-return-assign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-return-assign'>;
}
declare module 'eslint/lib/rules/no-return-await.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-return-await'>;
}
declare module 'eslint/lib/rules/no-script-url.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-script-url'>;
}
declare module 'eslint/lib/rules/no-self-assign.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-self-assign'>;
}
declare module 'eslint/lib/rules/no-self-compare.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-self-compare'>;
}
declare module 'eslint/lib/rules/no-sequences.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-sequences'>;
}
declare module 'eslint/lib/rules/no-shadow-restricted-names.js' {
  declare module.exports: $Exports<
    'eslint/lib/rules/no-shadow-restricted-names'
  >;
}
declare module 'eslint/lib/rules/no-shadow.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-shadow'>;
}
declare module 'eslint/lib/rules/no-spaced-func.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-spaced-func'>;
}
declare module 'eslint/lib/rules/no-sparse-arrays.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-sparse-arrays'>;
}
declare module 'eslint/lib/rules/no-sync.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-sync'>;
}
declare module 'eslint/lib/rules/no-tabs.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-tabs'>;
}
declare module 'eslint/lib/rules/no-template-curly-in-string.js' {
  declare module.exports: $Exports<
    'eslint/lib/rules/no-template-curly-in-string'
  >;
}
declare module 'eslint/lib/rules/no-ternary.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-ternary'>;
}
declare module 'eslint/lib/rules/no-this-before-super.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-this-before-super'>;
}
declare module 'eslint/lib/rules/no-throw-literal.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-throw-literal'>;
}
declare module 'eslint/lib/rules/no-trailing-spaces.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-trailing-spaces'>;
}
declare module 'eslint/lib/rules/no-undef-init.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-undef-init'>;
}
declare module 'eslint/lib/rules/no-undef.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-undef'>;
}
declare module 'eslint/lib/rules/no-undefined.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-undefined'>;
}
declare module 'eslint/lib/rules/no-underscore-dangle.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-underscore-dangle'>;
}
declare module 'eslint/lib/rules/no-unexpected-multiline.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-unexpected-multiline'>;
}
declare module 'eslint/lib/rules/no-unmodified-loop-condition.js' {
  declare module.exports: $Exports<
    'eslint/lib/rules/no-unmodified-loop-condition'
  >;
}
declare module 'eslint/lib/rules/no-unneeded-ternary.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-unneeded-ternary'>;
}
declare module 'eslint/lib/rules/no-unreachable.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-unreachable'>;
}
declare module 'eslint/lib/rules/no-unsafe-finally.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-unsafe-finally'>;
}
declare module 'eslint/lib/rules/no-unsafe-negation.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-unsafe-negation'>;
}
declare module 'eslint/lib/rules/no-unused-expressions.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-unused-expressions'>;
}
declare module 'eslint/lib/rules/no-unused-labels.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-unused-labels'>;
}
declare module 'eslint/lib/rules/no-unused-vars.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-unused-vars'>;
}
declare module 'eslint/lib/rules/no-use-before-define.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-use-before-define'>;
}
declare module 'eslint/lib/rules/no-useless-call.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-call'>;
}
declare module 'eslint/lib/rules/no-useless-computed-key.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-computed-key'>;
}
declare module 'eslint/lib/rules/no-useless-concat.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-concat'>;
}
declare module 'eslint/lib/rules/no-useless-constructor.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-constructor'>;
}
declare module 'eslint/lib/rules/no-useless-escape.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-escape'>;
}
declare module 'eslint/lib/rules/no-useless-rename.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-rename'>;
}
declare module 'eslint/lib/rules/no-useless-return.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-useless-return'>;
}
declare module 'eslint/lib/rules/no-var.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-var'>;
}
declare module 'eslint/lib/rules/no-void.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-void'>;
}
declare module 'eslint/lib/rules/no-warning-comments.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-warning-comments'>;
}
declare module 'eslint/lib/rules/no-whitespace-before-property.js' {
  declare module.exports: $Exports<
    'eslint/lib/rules/no-whitespace-before-property'
  >;
}
declare module 'eslint/lib/rules/no-with.js' {
  declare module.exports: $Exports<'eslint/lib/rules/no-with'>;
}
declare module 'eslint/lib/rules/nonblock-statement-body-position.js' {
  declare module.exports: $Exports<
    'eslint/lib/rules/nonblock-statement-body-position'
  >;
}
declare module 'eslint/lib/rules/object-curly-newline.js' {
  declare module.exports: $Exports<'eslint/lib/rules/object-curly-newline'>;
}
declare module 'eslint/lib/rules/object-curly-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/object-curly-spacing'>;
}
declare module 'eslint/lib/rules/object-property-newline.js' {
  declare module.exports: $Exports<'eslint/lib/rules/object-property-newline'>;
}
declare module 'eslint/lib/rules/object-shorthand.js' {
  declare module.exports: $Exports<'eslint/lib/rules/object-shorthand'>;
}
declare module 'eslint/lib/rules/one-var-declaration-per-line.js' {
  declare module.exports: $Exports<
    'eslint/lib/rules/one-var-declaration-per-line'
  >;
}
declare module 'eslint/lib/rules/one-var.js' {
  declare module.exports: $Exports<'eslint/lib/rules/one-var'>;
}
declare module 'eslint/lib/rules/operator-assignment.js' {
  declare module.exports: $Exports<'eslint/lib/rules/operator-assignment'>;
}
declare module 'eslint/lib/rules/operator-linebreak.js' {
  declare module.exports: $Exports<'eslint/lib/rules/operator-linebreak'>;
}
declare module 'eslint/lib/rules/padded-blocks.js' {
  declare module.exports: $Exports<'eslint/lib/rules/padded-blocks'>;
}
declare module 'eslint/lib/rules/padding-line-between-statements.js' {
  declare module.exports: $Exports<
    'eslint/lib/rules/padding-line-between-statements'
  >;
}
declare module 'eslint/lib/rules/prefer-arrow-callback.js' {
  declare module.exports: $Exports<'eslint/lib/rules/prefer-arrow-callback'>;
}
declare module 'eslint/lib/rules/prefer-const.js' {
  declare module.exports: $Exports<'eslint/lib/rules/prefer-const'>;
}
declare module 'eslint/lib/rules/prefer-destructuring.js' {
  declare module.exports: $Exports<'eslint/lib/rules/prefer-destructuring'>;
}
declare module 'eslint/lib/rules/prefer-numeric-literals.js' {
  declare module.exports: $Exports<'eslint/lib/rules/prefer-numeric-literals'>;
}
declare module 'eslint/lib/rules/prefer-promise-reject-errors.js' {
  declare module.exports: $Exports<
    'eslint/lib/rules/prefer-promise-reject-errors'
  >;
}
declare module 'eslint/lib/rules/prefer-reflect.js' {
  declare module.exports: $Exports<'eslint/lib/rules/prefer-reflect'>;
}
declare module 'eslint/lib/rules/prefer-rest-params.js' {
  declare module.exports: $Exports<'eslint/lib/rules/prefer-rest-params'>;
}
declare module 'eslint/lib/rules/prefer-spread.js' {
  declare module.exports: $Exports<'eslint/lib/rules/prefer-spread'>;
}
declare module 'eslint/lib/rules/prefer-template.js' {
  declare module.exports: $Exports<'eslint/lib/rules/prefer-template'>;
}
declare module 'eslint/lib/rules/quote-props.js' {
  declare module.exports: $Exports<'eslint/lib/rules/quote-props'>;
}
declare module 'eslint/lib/rules/quotes.js' {
  declare module.exports: $Exports<'eslint/lib/rules/quotes'>;
}
declare module 'eslint/lib/rules/radix.js' {
  declare module.exports: $Exports<'eslint/lib/rules/radix'>;
}
declare module 'eslint/lib/rules/require-await.js' {
  declare module.exports: $Exports<'eslint/lib/rules/require-await'>;
}
declare module 'eslint/lib/rules/require-jsdoc.js' {
  declare module.exports: $Exports<'eslint/lib/rules/require-jsdoc'>;
}
declare module 'eslint/lib/rules/require-yield.js' {
  declare module.exports: $Exports<'eslint/lib/rules/require-yield'>;
}
declare module 'eslint/lib/rules/rest-spread-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/rest-spread-spacing'>;
}
declare module 'eslint/lib/rules/semi-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/semi-spacing'>;
}
declare module 'eslint/lib/rules/semi-style.js' {
  declare module.exports: $Exports<'eslint/lib/rules/semi-style'>;
}
declare module 'eslint/lib/rules/semi.js' {
  declare module.exports: $Exports<'eslint/lib/rules/semi'>;
}
declare module 'eslint/lib/rules/sort-imports.js' {
  declare module.exports: $Exports<'eslint/lib/rules/sort-imports'>;
}
declare module 'eslint/lib/rules/sort-keys.js' {
  declare module.exports: $Exports<'eslint/lib/rules/sort-keys'>;
}
declare module 'eslint/lib/rules/sort-vars.js' {
  declare module.exports: $Exports<'eslint/lib/rules/sort-vars'>;
}
declare module 'eslint/lib/rules/space-before-blocks.js' {
  declare module.exports: $Exports<'eslint/lib/rules/space-before-blocks'>;
}
declare module 'eslint/lib/rules/space-before-function-paren.js' {
  declare module.exports: $Exports<
    'eslint/lib/rules/space-before-function-paren'
  >;
}
declare module 'eslint/lib/rules/space-in-parens.js' {
  declare module.exports: $Exports<'eslint/lib/rules/space-in-parens'>;
}
declare module 'eslint/lib/rules/space-infix-ops.js' {
  declare module.exports: $Exports<'eslint/lib/rules/space-infix-ops'>;
}
declare module 'eslint/lib/rules/space-unary-ops.js' {
  declare module.exports: $Exports<'eslint/lib/rules/space-unary-ops'>;
}
declare module 'eslint/lib/rules/spaced-comment.js' {
  declare module.exports: $Exports<'eslint/lib/rules/spaced-comment'>;
}
declare module 'eslint/lib/rules/strict.js' {
  declare module.exports: $Exports<'eslint/lib/rules/strict'>;
}
declare module 'eslint/lib/rules/switch-colon-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/switch-colon-spacing'>;
}
declare module 'eslint/lib/rules/symbol-description.js' {
  declare module.exports: $Exports<'eslint/lib/rules/symbol-description'>;
}
declare module 'eslint/lib/rules/template-curly-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/template-curly-spacing'>;
}
declare module 'eslint/lib/rules/template-tag-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/template-tag-spacing'>;
}
declare module 'eslint/lib/rules/unicode-bom.js' {
  declare module.exports: $Exports<'eslint/lib/rules/unicode-bom'>;
}
declare module 'eslint/lib/rules/use-isnan.js' {
  declare module.exports: $Exports<'eslint/lib/rules/use-isnan'>;
}
declare module 'eslint/lib/rules/valid-jsdoc.js' {
  declare module.exports: $Exports<'eslint/lib/rules/valid-jsdoc'>;
}
declare module 'eslint/lib/rules/valid-typeof.js' {
  declare module.exports: $Exports<'eslint/lib/rules/valid-typeof'>;
}
declare module 'eslint/lib/rules/vars-on-top.js' {
  declare module.exports: $Exports<'eslint/lib/rules/vars-on-top'>;
}
declare module 'eslint/lib/rules/wrap-iife.js' {
  declare module.exports: $Exports<'eslint/lib/rules/wrap-iife'>;
}
declare module 'eslint/lib/rules/wrap-regex.js' {
  declare module.exports: $Exports<'eslint/lib/rules/wrap-regex'>;
}
declare module 'eslint/lib/rules/yield-star-spacing.js' {
  declare module.exports: $Exports<'eslint/lib/rules/yield-star-spacing'>;
}
declare module 'eslint/lib/rules/yoda.js' {
  declare module.exports: $Exports<'eslint/lib/rules/yoda'>;
}
declare module 'eslint/lib/testers/rule-tester.js' {
  declare module.exports: $Exports<'eslint/lib/testers/rule-tester'>;
}
declare module 'eslint/lib/timing.js' {
  declare module.exports: $Exports<'eslint/lib/timing'>;
}
declare module 'eslint/lib/token-store/backward-token-comment-cursor.js' {
  declare module.exports: $Exports<
    'eslint/lib/token-store/backward-token-comment-cursor'
  >;
}
declare module 'eslint/lib/token-store/backward-token-cursor.js' {
  declare module.exports: $Exports<
    'eslint/lib/token-store/backward-token-cursor'
  >;
}
declare module 'eslint/lib/token-store/cursor.js' {
  declare module.exports: $Exports<'eslint/lib/token-store/cursor'>;
}
declare module 'eslint/lib/token-store/cursors.js' {
  declare module.exports: $Exports<'eslint/lib/token-store/cursors'>;
}
declare module 'eslint/lib/token-store/decorative-cursor.js' {
  declare module.exports: $Exports<'eslint/lib/token-store/decorative-cursor'>;
}
declare module 'eslint/lib/token-store/filter-cursor.js' {
  declare module.exports: $Exports<'eslint/lib/token-store/filter-cursor'>;
}
declare module 'eslint/lib/token-store/forward-token-comment-cursor.js' {
  declare module.exports: $Exports<
    'eslint/lib/token-store/forward-token-comment-cursor'
  >;
}
declare module 'eslint/lib/token-store/forward-token-cursor.js' {
  declare module.exports: $Exports<
    'eslint/lib/token-store/forward-token-cursor'
  >;
}
declare module 'eslint/lib/token-store/index.js' {
  declare module.exports: $Exports<'eslint/lib/token-store/index'>;
}
declare module 'eslint/lib/token-store/limit-cursor.js' {
  declare module.exports: $Exports<'eslint/lib/token-store/limit-cursor'>;
}
declare module 'eslint/lib/token-store/padded-token-cursor.js' {
  declare module.exports: $Exports<
    'eslint/lib/token-store/padded-token-cursor'
  >;
}
declare module 'eslint/lib/token-store/skip-cursor.js' {
  declare module.exports: $Exports<'eslint/lib/token-store/skip-cursor'>;
}
declare module 'eslint/lib/token-store/utils.js' {
  declare module.exports: $Exports<'eslint/lib/token-store/utils'>;
}
declare module 'eslint/lib/util/ajv.js' {
  declare module.exports: $Exports<'eslint/lib/util/ajv'>;
}
declare module 'eslint/lib/util/apply-disable-directives.js' {
  declare module.exports: $Exports<'eslint/lib/util/apply-disable-directives'>;
}
declare module 'eslint/lib/util/fix-tracker.js' {
  declare module.exports: $Exports<'eslint/lib/util/fix-tracker'>;
}
declare module 'eslint/lib/util/glob-util.js' {
  declare module.exports: $Exports<'eslint/lib/util/glob-util'>;
}
declare module 'eslint/lib/util/glob.js' {
  declare module.exports: $Exports<'eslint/lib/util/glob'>;
}
declare module 'eslint/lib/util/hash.js' {
  declare module.exports: $Exports<'eslint/lib/util/hash'>;
}
declare module 'eslint/lib/util/keywords.js' {
  declare module.exports: $Exports<'eslint/lib/util/keywords'>;
}
declare module 'eslint/lib/util/module-resolver.js' {
  declare module.exports: $Exports<'eslint/lib/util/module-resolver'>;
}
declare module 'eslint/lib/util/node-event-generator.js' {
  declare module.exports: $Exports<'eslint/lib/util/node-event-generator'>;
}
declare module 'eslint/lib/util/npm-util.js' {
  declare module.exports: $Exports<'eslint/lib/util/npm-util'>;
}
declare module 'eslint/lib/util/path-util.js' {
  declare module.exports: $Exports<'eslint/lib/util/path-util'>;
}
declare module 'eslint/lib/util/patterns/letters.js' {
  declare module.exports: $Exports<'eslint/lib/util/patterns/letters'>;
}
declare module 'eslint/lib/util/rule-fixer.js' {
  declare module.exports: $Exports<'eslint/lib/util/rule-fixer'>;
}
declare module 'eslint/lib/util/source-code-fixer.js' {
  declare module.exports: $Exports<'eslint/lib/util/source-code-fixer'>;
}
declare module 'eslint/lib/util/source-code-util.js' {
  declare module.exports: $Exports<'eslint/lib/util/source-code-util'>;
}
declare module 'eslint/lib/util/source-code.js' {
  declare module.exports: $Exports<'eslint/lib/util/source-code'>;
}
declare module 'eslint/lib/util/traverser.js' {
  declare module.exports: $Exports<'eslint/lib/util/traverser'>;
}
declare module 'eslint/lib/util/xml-escape.js' {
  declare module.exports: $Exports<'eslint/lib/util/xml-escape'>;
}
declare module 'eslint/Makefile.js' {
  declare module.exports: $Exports<'eslint/Makefile'>;
}
declare module 'eslint/packages/eslint-config-eslint/index.js' {
  declare module.exports: $Exports<
    'eslint/packages/eslint-config-eslint/index'
  >;
}
declare module 'eslint/tests/bench/bench.js' {
  declare module.exports: $Exports<'eslint/tests/bench/bench'>;
}
declare module 'eslint/tests/bench/large.js' {
  declare module.exports: $Exports<'eslint/tests/bench/large'>;
}
declare module 'eslint/tests/bench/medium.js' {
  declare module.exports: $Exports<'eslint/tests/bench/medium'>;
}
declare module 'eslint/tests/bench/small.js' {
  declare module.exports: $Exports<'eslint/tests/bench/small'>;
}
declare module 'eslint/tests/bench/xform-rules.js' {
  declare module.exports: $Exports<'eslint/tests/bench/xform-rules'>;
}
declare module 'eslint/tests/bin/eslint.js' {
  declare module.exports: $Exports<'eslint/tests/bin/eslint'>;
}
declare module 'eslint/tests/conf/config-schema.js' {
  declare module.exports: $Exports<'eslint/tests/conf/config-schema'>;
}
declare module 'eslint/tests/conf/eslint-all.js' {
  declare module.exports: $Exports<'eslint/tests/conf/eslint-all'>;
}
declare module 'eslint/tests/fixtures/autoconfig/source-with-comments.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/autoconfig/source-with-comments'
  >;
}
declare module 'eslint/tests/fixtures/autoconfig/source.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/autoconfig/source'>;
}
declare module 'eslint/tests/fixtures/autofix-integration/left-pad-expected-quiet.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/autofix-integration/left-pad-expected-quiet'
  >;
}
declare module 'eslint/tests/fixtures/autofix-integration/left-pad-expected.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/autofix-integration/left-pad-expected'
  >;
}
declare module 'eslint/tests/fixtures/autofix-integration/left-pad.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/autofix-integration/left-pad'
  >;
}
declare module 'eslint/tests/fixtures/autofix/return-conflicting-fixes.expected.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/autofix/return-conflicting-fixes.expected'
  >;
}
declare module 'eslint/tests/fixtures/autofix/return-conflicting-fixes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/autofix/return-conflicting-fixes'
  >;
}
declare module 'eslint/tests/fixtures/autofix/semicolon-conflicting-fixes.expected.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/autofix/semicolon-conflicting-fixes.expected'
  >;
}
declare module 'eslint/tests/fixtures/autofix/semicolon-conflicting-fixes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/autofix/semicolon-conflicting-fixes'
  >;
}
declare module 'eslint/tests/fixtures/cache/src/fail-file.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/cache/src/fail-file'>;
}
declare module 'eslint/tests/fixtures/cache/src/file-to-delete.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/cache/src/file-to-delete'
  >;
}
declare module 'eslint/tests/fixtures/cache/src/test-file.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/cache/src/test-file'>;
}
declare module 'eslint/tests/fixtures/cache/src/test-file2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/cache/src/test-file2'
  >;
}
declare module 'eslint/tests/fixtures/cli-engine/console.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/cli-engine/console'>;
}
declare module 'eslint/tests/fixtures/cli-engine/nested_node_modules/passing.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/cli-engine/nested_node_modules/passing'
  >;
}
declare module 'eslint/tests/fixtures/cli-engine/nested_node_modules/subdir/node_modules/text.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/cli-engine/nested_node_modules/subdir/node_modules/text'
  >;
}
declare module 'eslint/tests/fixtures/cli-engine/node_modules/foo.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/cli-engine/node_modules/foo'
  >;
}
declare module 'eslint/tests/fixtures/cli/passing.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/cli/passing'>;
}
declare module 'eslint/tests/fixtures/cli/syntax-error.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/cli/syntax-error'>;
}
declare module 'eslint/tests/fixtures/code-path-analysis/block-and-break-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/block-and-break-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/block-and-break-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/block-and-break-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/block-and-break-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/block-and-break-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/block-and-break-4.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/block-and-break-4'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/default-params--nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/default-params--nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/default-params--simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/default-params--simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/do-while--break-always.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/do-while--break-always'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/do-while--break-label.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/do-while--break-label'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/do-while--break-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/do-while--break-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/do-while--break-simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/do-while--break-simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/do-while--continue-always.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/do-while--continue-always'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/do-while--continue-label.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/do-while--continue-label'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/do-while--continue-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/do-while--continue-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/do-while--continue-simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/do-while--continue-simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/do-while--empty.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/do-while--empty'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/do-while--simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/do-while--simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--break-always.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--break-always'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--break-label.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--break-label'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--break-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--break-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--break-simple-no-test.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--break-simple-no-test'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--break-simple-no-update.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--break-simple-no-update'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--break-simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--break-simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-always.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--continue-always'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-label.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--continue-label'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--continue-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-simple-no-test.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--continue-simple-no-test'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-simple-no-update.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--continue-simple-no-update'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--continue-simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--continue-simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--direct-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--direct-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--empty.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--empty'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--simple-fork-in-test-update.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--simple-fork-in-test-update'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--simple-no-test.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--simple-no-test'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--simple-no-update.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--simple-no-update'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--simple-test-true.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--simple-test-true'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for--simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for--simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--break-always.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--break-always'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--break-label.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--break-label'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--break-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--break-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--break-simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--break-simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--continue-always.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--continue-always'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--continue-label.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--continue-label'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--continue-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--continue-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--continue-simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--continue-simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--direct-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--direct-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--empty.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--empty'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-in--simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-in--simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--break-always.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--break-always'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--break-label.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--break-label'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--break-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--break-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--break-simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--break-simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--continue-always.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--continue-always'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--continue-label.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--continue-label'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--continue-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--continue-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--continue-simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--continue-simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--direct-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--direct-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--empty.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--empty'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/for-of--simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/for-of--simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/function--in-condition-expr.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/function--in-condition-expr'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/function--in-logical-right.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/function--in-logical-right'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/function--simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/function--simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/if-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/if-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/if-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/if-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/if-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/if-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/if-4.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/if-4'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/if-5.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/if-5'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/if-6.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/if-6'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-and-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--do-while-and-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-and-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--do-while-and-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-mix-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--do-while-mix-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-mix-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--do-while-mix-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-or-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--do-while-or-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--do-while-or-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--do-while-or-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-and-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--for-and-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-and-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--for-and-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-and-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--for-and-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-mix-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--for-mix-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-mix-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--for-mix-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-mix-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--for-mix-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-or-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--for-or-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-or-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--for-or-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--for-or-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--for-or-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-and-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-and-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-and-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-and-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-and-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-and-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-and-4.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-and-4'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-and-5.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-and-5'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-mix-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-mix-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-mix-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-mix-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-or-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-or-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-or-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-or-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-or-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-or-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-or-4.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-or-4'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--if-or-5.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--if-or-5'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--simple-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--simple-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--simple-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--simple-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-and-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--while-and-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-and-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--while-and-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-mix-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--while-mix-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-mix-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--while-mix-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-or-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--while-or-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/logical--while-or-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/logical--while-or-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--cases-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--cases-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--cases-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--cases-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--cases-and-default-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--cases-and-default-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--cases-and-default-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--cases-and-default-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--cases-and-default-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--cases-and-default-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--default-only-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--default-only-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--default-only-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--default-only-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--empty.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--empty'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--precedence.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--precedence'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--single-case-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--single-case-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/switch--single-case-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/switch--single-case-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-catch-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-catch-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-catch-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-4.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-catch-4'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-finally-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-catch-finally-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-finally-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-catch-finally-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-catch-finally-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-catch-finally-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-finally-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-finally-1'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-finally-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-finally-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-finally-3.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-finally-3'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-finally-4.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-finally-4'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/try--try-finally-5.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/try--try-finally-5'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/unreachable-controls.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/unreachable-controls'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--break-always.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--break-always'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--break-label.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--break-label'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--break-nest-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--break-nest-2'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--break-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--break-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--break-simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--break-simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--continue-always.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--continue-always'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--continue-label.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--continue-label'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--continue-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--continue-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--continue-simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--continue-simple'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--direct-nest.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--direct-nest'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--empty.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--empty'
  >;
}
declare module 'eslint/tests/fixtures/code-path-analysis/while--simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/code-path-analysis/while--simple'
  >;
}
declare module 'eslint/tests/fixtures/config-extends/package2/subdir/foo.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-extends/package2/subdir/foo'
  >;
}
declare module 'eslint/tests/fixtures/config-extends/resolving-relatively/node_modules/a/index.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-extends/resolving-relatively/node_modules/a/index'
  >;
}
declare module 'eslint/tests/fixtures/config-extends/resolving-relatively/node_modules/a/node_modules/b/index.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-extends/resolving-relatively/node_modules/a/node_modules/b/index'
  >;
}
declare module 'eslint/tests/fixtures/config-extends/scoped-package3/foo.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-extends/scoped-package3/foo'
  >;
}
declare module 'eslint/tests/fixtures/config-file/extends-chain-2/node_modules/eslint-config-a/index.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-file/extends-chain-2/node_modules/eslint-config-a/index'
  >;
}
declare module 'eslint/tests/fixtures/config-file/extends-chain-2/node_modules/eslint-config-a/relative.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-file/extends-chain-2/node_modules/eslint-config-a/relative'
  >;
}
declare module 'eslint/tests/fixtures/config-file/extends-chain/node_modules/eslint-config-a/index.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-file/extends-chain/node_modules/eslint-config-a/index'
  >;
}
declare module 'eslint/tests/fixtures/config-file/extends-chain/node_modules/eslint-config-a/node_modules/eslint-config-b/index.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-file/extends-chain/node_modules/eslint-config-a/node_modules/eslint-config-b/index'
  >;
}
declare module 'eslint/tests/fixtures/config-file/extends-chain/node_modules/eslint-config-a/node_modules/eslint-config-b/node_modules/eslint-config-c/index.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-file/extends-chain/node_modules/eslint-config-a/node_modules/eslint-config-b/node_modules/eslint-config-c/index'
  >;
}
declare module 'eslint/tests/fixtures/config-file/js/node_modules/foo/index.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-file/js/node_modules/foo/index'
  >;
}
declare module 'eslint/tests/fixtures/config-file/js/not-a-config.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-file/js/not-a-config'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/broken/console-wrong-quotes-node.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/broken/console-wrong-quotes-node'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/broken/console-wrong-quotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/broken/console-wrong-quotes'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/broken/plugins/console-wrong-quotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/broken/plugins/console-wrong-quotes'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/broken/plugins2/console-wrong-quotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/broken/plugins2/console-wrong-quotes'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/broken/process-exit.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/broken/process-exit'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/broken/subbroken/console-wrong-quotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/broken/subbroken/console-wrong-quotes'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/broken/subbroken/subsubbroken/console-wrong-quotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/broken/subbroken/subsubbroken/console-wrong-quotes'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/broken/wrong-quotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/broken/wrong-quotes'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/envs/sub/foo.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/envs/sub/foo'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/packagejson/subdir/subsubdir/subsubsubdir/wrong-quotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/packagejson/subdir/subsubdir/subsubsubdir/wrong-quotes'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/packagejson/subdir/subsubdir/wrong-quotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/packagejson/subdir/subsubdir/wrong-quotes'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/packagejson/subdir/wrong-quotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/packagejson/subdir/wrong-quotes'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/packagejson/wrong-quotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/packagejson/wrong-quotes'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/root-true/parent/root/wrong-semi.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/root-true/parent/root/wrong-semi'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/shared/a/index.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/shared/a/index'
  >;
}
declare module 'eslint/tests/fixtures/config-hierarchy/shared/b/index.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-hierarchy/shared/b/index'
  >;
}
declare module 'eslint/tests/fixtures/config-initializer/lib/doubleQuotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-initializer/lib/doubleQuotes'
  >;
}
declare module 'eslint/tests/fixtures/config-initializer/lib/no-semi.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-initializer/lib/no-semi'
  >;
}
declare module 'eslint/tests/fixtures/config-initializer/parse-error/parse-error.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-initializer/parse-error/parse-error'
  >;
}
declare module 'eslint/tests/fixtures/config-initializer/singleQuotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-initializer/singleQuotes'
  >;
}
declare module 'eslint/tests/fixtures/config-initializer/tests/console-log.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-initializer/tests/console-log'
  >;
}
declare module 'eslint/tests/fixtures/config-initializer/tests/doubleQuotes.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/config-initializer/tests/doubleQuotes'
  >;
}
declare module 'eslint/tests/fixtures/config-rule/schemas.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/config-rule/schemas'>;
}
declare module 'eslint/tests/fixtures/configurations/parser/custom.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/configurations/parser/custom'
  >;
}
declare module 'eslint/tests/fixtures/disable-inline-config.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/disable-inline-config'
  >;
}
declare module 'eslint/tests/fixtures/eslintrc/quotes.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/eslintrc/quotes'>;
}
declare module 'eslint/tests/fixtures/files/foo.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/files/foo'>;
}
declare module 'eslint/tests/fixtures/fixmode/multipass.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/fixmode/multipass'>;
}
declare module 'eslint/tests/fixtures/fixmode/ok.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/fixmode/ok'>;
}
declare module 'eslint/tests/fixtures/fixmode/quotes-semi-eqeqeq.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/fixmode/quotes-semi-eqeqeq'
  >;
}
declare module 'eslint/tests/fixtures/fixmode/quotes.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/fixmode/quotes'>;
}
declare module 'eslint/tests/fixtures/fixture-parser.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/fixture-parser'>;
}
declare module 'eslint/tests/fixtures/formatters/broken.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/formatters/broken'>;
}
declare module 'eslint/tests/fixtures/formatters/simple.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/formatters/simple'>;
}
declare module 'eslint/tests/fixtures/formatters/test/simple.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/formatters/test/simple'
  >;
}
declare module 'eslint/tests/fixtures/glob-util/ignored/foo.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/glob-util/ignored/foo'
  >;
}
declare module 'eslint/tests/fixtures/glob-util/node_modules/dependency.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/glob-util/node_modules/dependency'
  >;
}
declare module 'eslint/tests/fixtures/glob-util/one-js-file/baz.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/glob-util/one-js-file/baz'
  >;
}
declare module 'eslint/tests/fixtures/glob-util/two-js-files/bar.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/glob-util/two-js-files/bar'
  >;
}
declare module 'eslint/tests/fixtures/glob-util/two-js-files/foo.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/glob-util/two-js-files/foo'
  >;
}
declare module 'eslint/tests/fixtures/globals-browser.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/globals-browser'>;
}
declare module 'eslint/tests/fixtures/globals-nashorn.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/globals-nashorn'>;
}
declare module 'eslint/tests/fixtures/globals-node.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/globals-node'>;
}
declare module 'eslint/tests/fixtures/globals-webextensions.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/globals-webextensions'
  >;
}
declare module 'eslint/tests/fixtures/ignored-paths/bower_components/package/file.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/ignored-paths/bower_components/package/file'
  >;
}
declare module 'eslint/tests/fixtures/ignored-paths/negation/ignore.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/ignored-paths/negation/ignore'
  >;
}
declare module 'eslint/tests/fixtures/ignored-paths/negation/unignore.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/ignored-paths/negation/unignore'
  >;
}
declare module 'eslint/tests/fixtures/ignored-paths/node_modules/package/file.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/ignored-paths/node_modules/package/file'
  >;
}
declare module 'eslint/tests/fixtures/ignored-paths/subdir/bower_components/package/file.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/ignored-paths/subdir/bower_components/package/file'
  >;
}
declare module 'eslint/tests/fixtures/ignored-paths/subdir/node_modules/package/file.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/ignored-paths/subdir/node_modules/package/file'
  >;
}
declare module 'eslint/tests/fixtures/ignored-paths/subdir/undef.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/ignored-paths/subdir/undef'
  >;
}
declare module 'eslint/tests/fixtures/ignored-paths/undef.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/ignored-paths/undef'>;
}
declare module 'eslint/tests/fixtures/ignored-paths/unignored.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/ignored-paths/unignored'
  >;
}
declare module 'eslint/tests/fixtures/max-warnings/six-warnings.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/max-warnings/six-warnings'
  >;
}
declare module 'eslint/tests/fixtures/missing-semicolon.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/missing-semicolon'>;
}
declare module 'eslint/tests/fixtures/module-resolver/node_modules/foo.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/module-resolver/node_modules/foo'
  >;
}
declare module 'eslint/tests/fixtures/packagejson/quotes.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/packagejson/quotes'>;
}
declare module 'eslint/tests/fixtures/parsers/array-bracket-spacing/flow-destructuring-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/array-bracket-spacing/flow-destructuring-1'
  >;
}
declare module 'eslint/tests/fixtures/parsers/array-bracket-spacing/flow-destructuring-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/array-bracket-spacing/flow-destructuring-2'
  >;
}
declare module 'eslint/tests/fixtures/parsers/arrow-parens/identifer-type.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/arrow-parens/identifer-type'
  >;
}
declare module 'eslint/tests/fixtures/parsers/arrow-parens/return-type.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/arrow-parens/return-type'
  >;
}
declare module 'eslint/tests/fixtures/parsers/babel-eslint5/destructuring-object-spread.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/babel-eslint5/destructuring-object-spread'
  >;
}
declare module 'eslint/tests/fixtures/parsers/babel-eslint7/array-pattern-with-annotation.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/babel-eslint7/array-pattern-with-annotation'
  >;
}
declare module 'eslint/tests/fixtures/parsers/babel-eslint7/function-type-annotation.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/babel-eslint7/function-type-annotation'
  >;
}
declare module 'eslint/tests/fixtures/parsers/babel-eslint7/object-pattern-with-annotation.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/babel-eslint7/object-pattern-with-annotation'
  >;
}
declare module 'eslint/tests/fixtures/parsers/babel-eslint7/object-pattern-with-object-annotation.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/babel-eslint7/object-pattern-with-object-annotation'
  >;
}
declare module 'eslint/tests/fixtures/parsers/comma-dangle/object-pattern-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/comma-dangle/object-pattern-1'
  >;
}
declare module 'eslint/tests/fixtures/parsers/comma-dangle/object-pattern-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/comma-dangle/object-pattern-2'
  >;
}
declare module 'eslint/tests/fixtures/parsers/comma-dangle/return-type-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/comma-dangle/return-type-1'
  >;
}
declare module 'eslint/tests/fixtures/parsers/comma-dangle/return-type-2.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/comma-dangle/return-type-2'
  >;
}
declare module 'eslint/tests/fixtures/parsers/enhanced-parser.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/enhanced-parser'
  >;
}
declare module 'eslint/tests/fixtures/parsers/line-error.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/parsers/line-error'>;
}
declare module 'eslint/tests/fixtures/parsers/no-line-error.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/no-line-error'
  >;
}
declare module 'eslint/tests/fixtures/parsers/object-curly-spacing/flow-stub-parser-never-invalid.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/object-curly-spacing/flow-stub-parser-never-invalid'
  >;
}
declare module 'eslint/tests/fixtures/parsers/object-curly-spacing/flow-stub-parser-never-valid.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/object-curly-spacing/flow-stub-parser-never-valid'
  >;
}
declare module 'eslint/tests/fixtures/parsers/stub-parser.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/parsers/stub-parser'>;
}
declare module 'eslint/tests/fixtures/parsers/throws-with-options.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/throws-with-options'
  >;
}
declare module 'eslint/tests/fixtures/parsers/type-annotations/function-declaration-type-annotation-no-space.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/type-annotations/function-declaration-type-annotation-no-space'
  >;
}
declare module 'eslint/tests/fixtures/parsers/type-annotations/function-expression-type-annotation.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/type-annotations/function-expression-type-annotation'
  >;
}
declare module 'eslint/tests/fixtures/parsers/type-annotations/function-parameter-type-annotation.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/type-annotations/function-parameter-type-annotation'
  >;
}
declare module 'eslint/tests/fixtures/parsers/type-annotations/function-return-type-annotation.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/type-annotations/function-return-type-annotation'
  >;
}
declare module 'eslint/tests/fixtures/parsers/type-annotations/variable-declaration-init-type-annotation-no-space.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/type-annotations/variable-declaration-init-type-annotation-no-space'
  >;
}
declare module 'eslint/tests/fixtures/parsers/type-annotations/variable-declaration-init-type-annotation.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/type-annotations/variable-declaration-init-type-annotation'
  >;
}
declare module 'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-class-methods.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-class-methods'
  >;
}
declare module 'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-class.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-class'
  >;
}
declare module 'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-keywords-class-method.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-keywords-class-method'
  >;
}
declare module 'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-static-class-methods.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/typescript-parsers/decorator-with-static-class-methods'
  >;
}
declare module 'eslint/tests/fixtures/parsers/typescript-parsers/keyword-with-arrow-function.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/typescript-parsers/keyword-with-arrow-function'
  >;
}
declare module 'eslint/tests/fixtures/parsers/typescript-parsers/new-parens.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/typescript-parsers/new-parens'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/abstract-class-invalid.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/abstract-class-invalid'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/abstract-class-valid.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/abstract-class-valid'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/functions-with-abstract-class-invalid.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/functions-with-abstract-class-invalid'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/functions-with-abstract-class-valid.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/functions-with-abstract-class-valid'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/interface.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/interface'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/namespace-invalid.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/namespace-invalid'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/namespace-valid.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/namespace-valid'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/namespace-with-functions-with-abstract-class-invalid.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/namespace-with-functions-with-abstract-class-invalid'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/namespace-with-functions-with-abstract-class-valid.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/namespace-with-functions-with-abstract-class-valid'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/variable-declarator-type-indent-two-spaces.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/variable-declarator-type-indent-two-spaces'
  >;
}
declare module 'eslint/tests/fixtures/parsers/unknown-nodes/variable-declarator-type-no-indent.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/parsers/unknown-nodes/variable-declarator-type-no-indent'
  >;
}
declare module 'eslint/tests/fixtures/passing-es7.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/passing-es7'>;
}
declare module 'eslint/tests/fixtures/passing.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/passing'>;
}
declare module 'eslint/tests/fixtures/process-exit.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/process-exit'>;
}
declare module 'eslint/tests/fixtures/processors/custom-processor.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/processors/custom-processor'
  >;
}
declare module 'eslint/tests/fixtures/rules/custom-rule.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/rules/custom-rule'>;
}
declare module 'eslint/tests/fixtures/rules/dir1/no-strings.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/rules/dir1/no-strings'
  >;
}
declare module 'eslint/tests/fixtures/rules/dir2/no-literals.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/rules/dir2/no-literals'
  >;
}
declare module 'eslint/tests/fixtures/rules/fixture-rule.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/rules/fixture-rule'>;
}
declare module 'eslint/tests/fixtures/rules/indent-legacy/indent-invalid-fixture-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/rules/indent-legacy/indent-invalid-fixture-1'
  >;
}
declare module 'eslint/tests/fixtures/rules/indent-legacy/indent-valid-fixture-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/rules/indent-legacy/indent-valid-fixture-1'
  >;
}
declare module 'eslint/tests/fixtures/rules/indent/indent-invalid-fixture-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/rules/indent/indent-invalid-fixture-1'
  >;
}
declare module 'eslint/tests/fixtures/rules/indent/indent-valid-fixture-1.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/rules/indent/indent-valid-fixture-1'
  >;
}
declare module 'eslint/tests/fixtures/rules/make-syntax-error-rule.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/rules/make-syntax-error-rule'
  >;
}
declare module 'eslint/tests/fixtures/rules/test-multi-rulesdirs.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/rules/test-multi-rulesdirs'
  >;
}
declare module 'eslint/tests/fixtures/rules/test/test-custom-rule.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/rules/test/test-custom-rule'
  >;
}
declare module 'eslint/tests/fixtures/rules/wrong/custom-rule.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/rules/wrong/custom-rule'
  >;
}
declare module 'eslint/tests/fixtures/shebang.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/shebang'>;
}
declare module 'eslint/tests/fixtures/single-quoted.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/single-quoted'>;
}
declare module 'eslint/tests/fixtures/source-code-util/bar.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/source-code-util/bar'
  >;
}
declare module 'eslint/tests/fixtures/source-code-util/ext/foo.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/source-code-util/ext/foo'
  >;
}
declare module 'eslint/tests/fixtures/source-code-util/foo.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/source-code-util/foo'
  >;
}
declare module 'eslint/tests/fixtures/source-code-util/ignored.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/source-code-util/ignored'
  >;
}
declare module 'eslint/tests/fixtures/source-code-util/jsx/foo.jsx' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/source-code-util/jsx/foo'
  >;
}
declare module 'eslint/tests/fixtures/source-code-util/nested/bar.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/source-code-util/nested/bar'
  >;
}
declare module 'eslint/tests/fixtures/source-code-util/nested/foo.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/source-code-util/nested/foo'
  >;
}
declare module 'eslint/tests/fixtures/source-code-util/parse-error/parse-error.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/source-code-util/parse-error/parse-error'
  >;
}
declare module 'eslint/tests/fixtures/syntax-error.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/syntax-error'>;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/fixes-one-problem.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/fixes-one-problem'
  >;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/modify-ast-at-first.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/modify-ast-at-first'
  >;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/modify-ast-at-last.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/modify-ast-at-last'
  >;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/modify-ast.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/modify-ast'
  >;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/no-eval.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/no-eval'
  >;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/no-invalid-args.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/no-invalid-args'
  >;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/no-invalid-schema.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/no-invalid-schema'
  >;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/no-schema-violation.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/no-schema-violation'
  >;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/no-test-global.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/no-test-global'
  >;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/no-test-settings.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/no-test-settings'
  >;
}
declare module 'eslint/tests/fixtures/testers/rule-tester/no-var.js' {
  declare module.exports: $Exports<
    'eslint/tests/fixtures/testers/rule-tester/no-var'
  >;
}
declare module 'eslint/tests/fixtures/traverse/found.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/traverse/found'>;
}
declare module 'eslint/tests/fixtures/undef.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/undef'>;
}
declare module 'eslint/tests/fixtures/utf8-bom.js' {
  declare module.exports: $Exports<'eslint/tests/fixtures/utf8-bom'>;
}
declare module 'eslint/tests/lib/api.js' {
  declare module.exports: $Exports<'eslint/tests/lib/api'>;
}
declare module 'eslint/tests/lib/ast-utils.js' {
  declare module.exports: $Exports<'eslint/tests/lib/ast-utils'>;
}
declare module 'eslint/tests/lib/cli-engine.js' {
  declare module.exports: $Exports<'eslint/tests/lib/cli-engine'>;
}
declare module 'eslint/tests/lib/cli.js' {
  declare module.exports: $Exports<'eslint/tests/lib/cli'>;
}
declare module 'eslint/tests/lib/code-path-analysis/code-path-analyzer.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/code-path-analysis/code-path-analyzer'
  >;
}
declare module 'eslint/tests/lib/code-path-analysis/code-path.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/code-path-analysis/code-path'
  >;
}
declare module 'eslint/tests/lib/config.js' {
  declare module.exports: $Exports<'eslint/tests/lib/config'>;
}
declare module 'eslint/tests/lib/config/autoconfig.js' {
  declare module.exports: $Exports<'eslint/tests/lib/config/autoconfig'>;
}
declare module 'eslint/tests/lib/config/config-file.js' {
  declare module.exports: $Exports<'eslint/tests/lib/config/config-file'>;
}
declare module 'eslint/tests/lib/config/config-initializer.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/config/config-initializer'
  >;
}
declare module 'eslint/tests/lib/config/config-ops.js' {
  declare module.exports: $Exports<'eslint/tests/lib/config/config-ops'>;
}
declare module 'eslint/tests/lib/config/config-rule.js' {
  declare module.exports: $Exports<'eslint/tests/lib/config/config-rule'>;
}
declare module 'eslint/tests/lib/config/config-validator.js' {
  declare module.exports: $Exports<'eslint/tests/lib/config/config-validator'>;
}
declare module 'eslint/tests/lib/config/environments.js' {
  declare module.exports: $Exports<'eslint/tests/lib/config/environments'>;
}
declare module 'eslint/tests/lib/config/plugins.js' {
  declare module.exports: $Exports<'eslint/tests/lib/config/plugins'>;
}
declare module 'eslint/tests/lib/file-finder.js' {
  declare module.exports: $Exports<'eslint/tests/lib/file-finder'>;
}
declare module 'eslint/tests/lib/formatters/checkstyle.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/checkstyle'>;
}
declare module 'eslint/tests/lib/formatters/codeframe.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/codeframe'>;
}
declare module 'eslint/tests/lib/formatters/compact.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/compact'>;
}
declare module 'eslint/tests/lib/formatters/html.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/html'>;
}
declare module 'eslint/tests/lib/formatters/jslint-xml.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/jslint-xml'>;
}
declare module 'eslint/tests/lib/formatters/json.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/json'>;
}
declare module 'eslint/tests/lib/formatters/junit.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/junit'>;
}
declare module 'eslint/tests/lib/formatters/stylish.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/stylish'>;
}
declare module 'eslint/tests/lib/formatters/table.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/table'>;
}
declare module 'eslint/tests/lib/formatters/tap.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/tap'>;
}
declare module 'eslint/tests/lib/formatters/unix.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/unix'>;
}
declare module 'eslint/tests/lib/formatters/visualstudio.js' {
  declare module.exports: $Exports<'eslint/tests/lib/formatters/visualstudio'>;
}
declare module 'eslint/tests/lib/ignored-paths.js' {
  declare module.exports: $Exports<'eslint/tests/lib/ignored-paths'>;
}
declare module 'eslint/tests/lib/internal-rules/internal-consistent-docs-description.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/internal-rules/internal-consistent-docs-description'
  >;
}
declare module 'eslint/tests/lib/internal-rules/internal-no-invalid-meta.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/internal-rules/internal-no-invalid-meta'
  >;
}
declare module 'eslint/tests/lib/linter.js' {
  declare module.exports: $Exports<'eslint/tests/lib/linter'>;
}
declare module 'eslint/tests/lib/options.js' {
  declare module.exports: $Exports<'eslint/tests/lib/options'>;
}
declare module 'eslint/tests/lib/report-translator.js' {
  declare module.exports: $Exports<'eslint/tests/lib/report-translator'>;
}
declare module 'eslint/tests/lib/rules.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules'>;
}
declare module 'eslint/tests/lib/rules/_set-default-parser.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/_set-default-parser'
  >;
}
declare module 'eslint/tests/lib/rules/accessor-pairs.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/accessor-pairs'>;
}
declare module 'eslint/tests/lib/rules/array-bracket-newline.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/array-bracket-newline'
  >;
}
declare module 'eslint/tests/lib/rules/array-bracket-spacing.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/array-bracket-spacing'
  >;
}
declare module 'eslint/tests/lib/rules/array-callback-return.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/array-callback-return'
  >;
}
declare module 'eslint/tests/lib/rules/array-element-newline.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/array-element-newline'
  >;
}
declare module 'eslint/tests/lib/rules/arrow-body-style.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/arrow-body-style'>;
}
declare module 'eslint/tests/lib/rules/arrow-parens.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/arrow-parens'>;
}
declare module 'eslint/tests/lib/rules/arrow-spacing.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/arrow-spacing'>;
}
declare module 'eslint/tests/lib/rules/block-scoped-var.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/block-scoped-var'>;
}
declare module 'eslint/tests/lib/rules/block-spacing.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/block-spacing'>;
}
declare module 'eslint/tests/lib/rules/brace-style.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/brace-style'>;
}
declare module 'eslint/tests/lib/rules/callback-return.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/callback-return'>;
}
declare module 'eslint/tests/lib/rules/camelcase.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/camelcase'>;
}
declare module 'eslint/tests/lib/rules/capitalized-comments.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/capitalized-comments'
  >;
}
declare module 'eslint/tests/lib/rules/class-methods-use-this.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/class-methods-use-this'
  >;
}
declare module 'eslint/tests/lib/rules/comma-dangle.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/comma-dangle'>;
}
declare module 'eslint/tests/lib/rules/comma-spacing.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/comma-spacing'>;
}
declare module 'eslint/tests/lib/rules/comma-style.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/comma-style'>;
}
declare module 'eslint/tests/lib/rules/complexity.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/complexity'>;
}
declare module 'eslint/tests/lib/rules/computed-property-spacing.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/computed-property-spacing'
  >;
}
declare module 'eslint/tests/lib/rules/consistent-return.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/consistent-return'>;
}
declare module 'eslint/tests/lib/rules/consistent-this.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/consistent-this'>;
}
declare module 'eslint/tests/lib/rules/constructor-super.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/constructor-super'>;
}
declare module 'eslint/tests/lib/rules/curly.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/curly'>;
}
declare module 'eslint/tests/lib/rules/default-case.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/default-case'>;
}
declare module 'eslint/tests/lib/rules/dot-location.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/dot-location'>;
}
declare module 'eslint/tests/lib/rules/dot-notation.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/dot-notation'>;
}
declare module 'eslint/tests/lib/rules/eol-last.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/eol-last'>;
}
declare module 'eslint/tests/lib/rules/eqeqeq.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/eqeqeq'>;
}
declare module 'eslint/tests/lib/rules/for-direction.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/for-direction'>;
}
declare module 'eslint/tests/lib/rules/func-call-spacing.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/func-call-spacing'>;
}
declare module 'eslint/tests/lib/rules/func-name-matching.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/func-name-matching'>;
}
declare module 'eslint/tests/lib/rules/func-names.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/func-names'>;
}
declare module 'eslint/tests/lib/rules/func-style.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/func-style'>;
}
declare module 'eslint/tests/lib/rules/function-paren-newline.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/function-paren-newline'
  >;
}
declare module 'eslint/tests/lib/rules/generator-star-spacing.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/generator-star-spacing'
  >;
}
declare module 'eslint/tests/lib/rules/getter-return.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/getter-return'>;
}
declare module 'eslint/tests/lib/rules/global-require.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/global-require'>;
}
declare module 'eslint/tests/lib/rules/guard-for-in.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/guard-for-in'>;
}
declare module 'eslint/tests/lib/rules/handle-callback-err.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/handle-callback-err'
  >;
}
declare module 'eslint/tests/lib/rules/id-blacklist.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/id-blacklist'>;
}
declare module 'eslint/tests/lib/rules/id-length.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/id-length'>;
}
declare module 'eslint/tests/lib/rules/id-match.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/id-match'>;
}
declare module 'eslint/tests/lib/rules/indent-legacy.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/indent-legacy'>;
}
declare module 'eslint/tests/lib/rules/indent.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/indent'>;
}
declare module 'eslint/tests/lib/rules/init-declarations.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/init-declarations'>;
}
declare module 'eslint/tests/lib/rules/jsx-quotes.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/jsx-quotes'>;
}
declare module 'eslint/tests/lib/rules/key-spacing.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/key-spacing'>;
}
declare module 'eslint/tests/lib/rules/keyword-spacing.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/keyword-spacing'>;
}
declare module 'eslint/tests/lib/rules/line-comment-position.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/line-comment-position'
  >;
}
declare module 'eslint/tests/lib/rules/linebreak-style.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/linebreak-style'>;
}
declare module 'eslint/tests/lib/rules/lines-around-comment.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/lines-around-comment'
  >;
}
declare module 'eslint/tests/lib/rules/lines-around-directive.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/lines-around-directive'
  >;
}
declare module 'eslint/tests/lib/rules/max-depth.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/max-depth'>;
}
declare module 'eslint/tests/lib/rules/max-len.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/max-len'>;
}
declare module 'eslint/tests/lib/rules/max-lines.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/max-lines'>;
}
declare module 'eslint/tests/lib/rules/max-nested-callbacks.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/max-nested-callbacks'
  >;
}
declare module 'eslint/tests/lib/rules/max-params.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/max-params'>;
}
declare module 'eslint/tests/lib/rules/max-statements-per-line.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/max-statements-per-line'
  >;
}
declare module 'eslint/tests/lib/rules/max-statements.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/max-statements'>;
}
declare module 'eslint/tests/lib/rules/multiline-ternary.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/multiline-ternary'>;
}
declare module 'eslint/tests/lib/rules/new-cap.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/new-cap'>;
}
declare module 'eslint/tests/lib/rules/new-parens.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/new-parens'>;
}
declare module 'eslint/tests/lib/rules/newline-after-var.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/newline-after-var'>;
}
declare module 'eslint/tests/lib/rules/newline-before-return.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/newline-before-return'
  >;
}
declare module 'eslint/tests/lib/rules/newline-per-chained-call.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/newline-per-chained-call'
  >;
}
declare module 'eslint/tests/lib/rules/no-alert.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-alert'>;
}
declare module 'eslint/tests/lib/rules/no-array-constructor.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-array-constructor'
  >;
}
declare module 'eslint/tests/lib/rules/no-await-in-loop.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-await-in-loop'>;
}
declare module 'eslint/tests/lib/rules/no-bitwise.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-bitwise'>;
}
declare module 'eslint/tests/lib/rules/no-buffer-constructor.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-buffer-constructor'
  >;
}
declare module 'eslint/tests/lib/rules/no-caller.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-caller'>;
}
declare module 'eslint/tests/lib/rules/no-case-declarations.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-case-declarations'
  >;
}
declare module 'eslint/tests/lib/rules/no-catch-shadow.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-catch-shadow'>;
}
declare module 'eslint/tests/lib/rules/no-class-assign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-class-assign'>;
}
declare module 'eslint/tests/lib/rules/no-compare-neg-zero.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-compare-neg-zero'
  >;
}
declare module 'eslint/tests/lib/rules/no-cond-assign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-cond-assign'>;
}
declare module 'eslint/tests/lib/rules/no-confusing-arrow.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-confusing-arrow'>;
}
declare module 'eslint/tests/lib/rules/no-console.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-console'>;
}
declare module 'eslint/tests/lib/rules/no-const-assign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-const-assign'>;
}
declare module 'eslint/tests/lib/rules/no-constant-condition.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-constant-condition'
  >;
}
declare module 'eslint/tests/lib/rules/no-continue.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-continue'>;
}
declare module 'eslint/tests/lib/rules/no-control-regex.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-control-regex'>;
}
declare module 'eslint/tests/lib/rules/no-debugger.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-debugger'>;
}
declare module 'eslint/tests/lib/rules/no-delete-var.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-delete-var'>;
}
declare module 'eslint/tests/lib/rules/no-div-regex.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-div-regex'>;
}
declare module 'eslint/tests/lib/rules/no-dupe-args.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-dupe-args'>;
}
declare module 'eslint/tests/lib/rules/no-dupe-class-members.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-dupe-class-members'
  >;
}
declare module 'eslint/tests/lib/rules/no-dupe-keys.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-dupe-keys'>;
}
declare module 'eslint/tests/lib/rules/no-duplicate-case.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-duplicate-case'>;
}
declare module 'eslint/tests/lib/rules/no-duplicate-imports.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-duplicate-imports'
  >;
}
declare module 'eslint/tests/lib/rules/no-else-return.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-else-return'>;
}
declare module 'eslint/tests/lib/rules/no-empty-character-class.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-empty-character-class'
  >;
}
declare module 'eslint/tests/lib/rules/no-empty-function.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-empty-function'>;
}
declare module 'eslint/tests/lib/rules/no-empty-pattern.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-empty-pattern'>;
}
declare module 'eslint/tests/lib/rules/no-empty.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-empty'>;
}
declare module 'eslint/tests/lib/rules/no-eq-null.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-eq-null'>;
}
declare module 'eslint/tests/lib/rules/no-eval.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-eval'>;
}
declare module 'eslint/tests/lib/rules/no-ex-assign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-ex-assign'>;
}
declare module 'eslint/tests/lib/rules/no-extend-native.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-extend-native'>;
}
declare module 'eslint/tests/lib/rules/no-extra-bind.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-extra-bind'>;
}
declare module 'eslint/tests/lib/rules/no-extra-boolean-cast.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-extra-boolean-cast'
  >;
}
declare module 'eslint/tests/lib/rules/no-extra-label.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-extra-label'>;
}
declare module 'eslint/tests/lib/rules/no-extra-parens.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-extra-parens'>;
}
declare module 'eslint/tests/lib/rules/no-extra-semi.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-extra-semi'>;
}
declare module 'eslint/tests/lib/rules/no-fallthrough.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-fallthrough'>;
}
declare module 'eslint/tests/lib/rules/no-floating-decimal.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-floating-decimal'
  >;
}
declare module 'eslint/tests/lib/rules/no-func-assign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-func-assign'>;
}
declare module 'eslint/tests/lib/rules/no-global-assign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-global-assign'>;
}
declare module 'eslint/tests/lib/rules/no-implicit-coercion.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-implicit-coercion'
  >;
}
declare module 'eslint/tests/lib/rules/no-implicit-globals.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-implicit-globals'
  >;
}
declare module 'eslint/tests/lib/rules/no-implied-eval.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-implied-eval'>;
}
declare module 'eslint/tests/lib/rules/no-inline-comments.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-inline-comments'>;
}
declare module 'eslint/tests/lib/rules/no-inner-declarations.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-inner-declarations'
  >;
}
declare module 'eslint/tests/lib/rules/no-invalid-regexp.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-invalid-regexp'>;
}
declare module 'eslint/tests/lib/rules/no-invalid-this.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-invalid-this'>;
}
declare module 'eslint/tests/lib/rules/no-irregular-whitespace.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-irregular-whitespace'
  >;
}
declare module 'eslint/tests/lib/rules/no-iterator.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-iterator'>;
}
declare module 'eslint/tests/lib/rules/no-label-var.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-label-var'>;
}
declare module 'eslint/tests/lib/rules/no-labels.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-labels'>;
}
declare module 'eslint/tests/lib/rules/no-lone-blocks.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-lone-blocks'>;
}
declare module 'eslint/tests/lib/rules/no-lonely-if.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-lonely-if'>;
}
declare module 'eslint/tests/lib/rules/no-loop-func.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-loop-func'>;
}
declare module 'eslint/tests/lib/rules/no-magic-numbers.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-magic-numbers'>;
}
declare module 'eslint/tests/lib/rules/no-mixed-operators.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-mixed-operators'>;
}
declare module 'eslint/tests/lib/rules/no-mixed-requires.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-mixed-requires'>;
}
declare module 'eslint/tests/lib/rules/no-mixed-spaces-and-tabs.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-mixed-spaces-and-tabs'
  >;
}
declare module 'eslint/tests/lib/rules/no-multi-assign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-multi-assign'>;
}
declare module 'eslint/tests/lib/rules/no-multi-spaces.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-multi-spaces'>;
}
declare module 'eslint/tests/lib/rules/no-multi-str.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-multi-str'>;
}
declare module 'eslint/tests/lib/rules/no-multiple-empty-lines.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-multiple-empty-lines'
  >;
}
declare module 'eslint/tests/lib/rules/no-native-reassign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-native-reassign'>;
}
declare module 'eslint/tests/lib/rules/no-negated-condition.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-negated-condition'
  >;
}
declare module 'eslint/tests/lib/rules/no-negated-in-lhs.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-negated-in-lhs'>;
}
declare module 'eslint/tests/lib/rules/no-nested-ternary.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-nested-ternary'>;
}
declare module 'eslint/tests/lib/rules/no-new-func.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-new-func'>;
}
declare module 'eslint/tests/lib/rules/no-new-object.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-new-object'>;
}
declare module 'eslint/tests/lib/rules/no-new-require.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-new-require'>;
}
declare module 'eslint/tests/lib/rules/no-new-symbol.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-new-symbol'>;
}
declare module 'eslint/tests/lib/rules/no-new-wrappers.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-new-wrappers'>;
}
declare module 'eslint/tests/lib/rules/no-new.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-new'>;
}
declare module 'eslint/tests/lib/rules/no-obj-calls.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-obj-calls'>;
}
declare module 'eslint/tests/lib/rules/no-octal-escape.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-octal-escape'>;
}
declare module 'eslint/tests/lib/rules/no-octal.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-octal'>;
}
declare module 'eslint/tests/lib/rules/no-param-reassign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-param-reassign'>;
}
declare module 'eslint/tests/lib/rules/no-path-concat.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-path-concat'>;
}
declare module 'eslint/tests/lib/rules/no-plusplus.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-plusplus'>;
}
declare module 'eslint/tests/lib/rules/no-process-env.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-process-env'>;
}
declare module 'eslint/tests/lib/rules/no-process-exit.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-process-exit'>;
}
declare module 'eslint/tests/lib/rules/no-proto.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-proto'>;
}
declare module 'eslint/tests/lib/rules/no-prototype-builtins.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-prototype-builtins'
  >;
}
declare module 'eslint/tests/lib/rules/no-redeclare.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-redeclare'>;
}
declare module 'eslint/tests/lib/rules/no-regex-spaces.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-regex-spaces'>;
}
declare module 'eslint/tests/lib/rules/no-restricted-globals.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-restricted-globals'
  >;
}
declare module 'eslint/tests/lib/rules/no-restricted-imports.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-restricted-imports'
  >;
}
declare module 'eslint/tests/lib/rules/no-restricted-modules.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-restricted-modules'
  >;
}
declare module 'eslint/tests/lib/rules/no-restricted-properties.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-restricted-properties'
  >;
}
declare module 'eslint/tests/lib/rules/no-restricted-syntax.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-restricted-syntax'
  >;
}
declare module 'eslint/tests/lib/rules/no-return-assign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-return-assign'>;
}
declare module 'eslint/tests/lib/rules/no-return-await.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-return-await'>;
}
declare module 'eslint/tests/lib/rules/no-script-url.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-script-url'>;
}
declare module 'eslint/tests/lib/rules/no-self-assign.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-self-assign'>;
}
declare module 'eslint/tests/lib/rules/no-self-compare.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-self-compare'>;
}
declare module 'eslint/tests/lib/rules/no-sequences.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-sequences'>;
}
declare module 'eslint/tests/lib/rules/no-shadow-restricted-names.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-shadow-restricted-names'
  >;
}
declare module 'eslint/tests/lib/rules/no-shadow.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-shadow'>;
}
declare module 'eslint/tests/lib/rules/no-spaced-func.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-spaced-func'>;
}
declare module 'eslint/tests/lib/rules/no-sparse-arrays.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-sparse-arrays'>;
}
declare module 'eslint/tests/lib/rules/no-sync.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-sync'>;
}
declare module 'eslint/tests/lib/rules/no-tabs.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-tabs'>;
}
declare module 'eslint/tests/lib/rules/no-template-curly-in-string.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-template-curly-in-string'
  >;
}
declare module 'eslint/tests/lib/rules/no-ternary.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-ternary'>;
}
declare module 'eslint/tests/lib/rules/no-this-before-super.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-this-before-super'
  >;
}
declare module 'eslint/tests/lib/rules/no-throw-literal.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-throw-literal'>;
}
declare module 'eslint/tests/lib/rules/no-trailing-spaces.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-trailing-spaces'>;
}
declare module 'eslint/tests/lib/rules/no-undef-init.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-undef-init'>;
}
declare module 'eslint/tests/lib/rules/no-undef.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-undef'>;
}
declare module 'eslint/tests/lib/rules/no-undefined.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-undefined'>;
}
declare module 'eslint/tests/lib/rules/no-underscore-dangle.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-underscore-dangle'
  >;
}
declare module 'eslint/tests/lib/rules/no-unexpected-multiline.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-unexpected-multiline'
  >;
}
declare module 'eslint/tests/lib/rules/no-unmodified-loop-condition.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-unmodified-loop-condition'
  >;
}
declare module 'eslint/tests/lib/rules/no-unneeded-ternary.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-unneeded-ternary'
  >;
}
declare module 'eslint/tests/lib/rules/no-unreachable.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-unreachable'>;
}
declare module 'eslint/tests/lib/rules/no-unsafe-finally.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-unsafe-finally'>;
}
declare module 'eslint/tests/lib/rules/no-unsafe-negation.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-unsafe-negation'>;
}
declare module 'eslint/tests/lib/rules/no-unused-expressions.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-unused-expressions'
  >;
}
declare module 'eslint/tests/lib/rules/no-unused-labels.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-unused-labels'>;
}
declare module 'eslint/tests/lib/rules/no-unused-vars.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-unused-vars'>;
}
declare module 'eslint/tests/lib/rules/no-use-before-define.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-use-before-define'
  >;
}
declare module 'eslint/tests/lib/rules/no-useless-call.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-useless-call'>;
}
declare module 'eslint/tests/lib/rules/no-useless-computed-key.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-useless-computed-key'
  >;
}
declare module 'eslint/tests/lib/rules/no-useless-concat.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-useless-concat'>;
}
declare module 'eslint/tests/lib/rules/no-useless-constructor.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-useless-constructor'
  >;
}
declare module 'eslint/tests/lib/rules/no-useless-escape.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-useless-escape'>;
}
declare module 'eslint/tests/lib/rules/no-useless-rename.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-useless-rename'>;
}
declare module 'eslint/tests/lib/rules/no-useless-return.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-useless-return'>;
}
declare module 'eslint/tests/lib/rules/no-var.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-var'>;
}
declare module 'eslint/tests/lib/rules/no-void.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-void'>;
}
declare module 'eslint/tests/lib/rules/no-warning-comments.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-warning-comments'
  >;
}
declare module 'eslint/tests/lib/rules/no-whitespace-before-property.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/no-whitespace-before-property'
  >;
}
declare module 'eslint/tests/lib/rules/no-with.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/no-with'>;
}
declare module 'eslint/tests/lib/rules/nonblock-statement-body-position.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/nonblock-statement-body-position'
  >;
}
declare module 'eslint/tests/lib/rules/object-curly-newline.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/object-curly-newline'
  >;
}
declare module 'eslint/tests/lib/rules/object-curly-spacing.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/object-curly-spacing'
  >;
}
declare module 'eslint/tests/lib/rules/object-property-newline.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/object-property-newline'
  >;
}
declare module 'eslint/tests/lib/rules/object-shorthand.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/object-shorthand'>;
}
declare module 'eslint/tests/lib/rules/one-var-declaration-per-line.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/one-var-declaration-per-line'
  >;
}
declare module 'eslint/tests/lib/rules/one-var.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/one-var'>;
}
declare module 'eslint/tests/lib/rules/operator-assignment.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/operator-assignment'
  >;
}
declare module 'eslint/tests/lib/rules/operator-linebreak.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/operator-linebreak'>;
}
declare module 'eslint/tests/lib/rules/padded-blocks.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/padded-blocks'>;
}
declare module 'eslint/tests/lib/rules/padding-line-between-statements.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/padding-line-between-statements'
  >;
}
declare module 'eslint/tests/lib/rules/prefer-arrow-callback.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/prefer-arrow-callback'
  >;
}
declare module 'eslint/tests/lib/rules/prefer-const.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/prefer-const'>;
}
declare module 'eslint/tests/lib/rules/prefer-destructuring.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/prefer-destructuring'
  >;
}
declare module 'eslint/tests/lib/rules/prefer-numeric-literals.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/prefer-numeric-literals'
  >;
}
declare module 'eslint/tests/lib/rules/prefer-promise-reject-errors.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/prefer-promise-reject-errors'
  >;
}
declare module 'eslint/tests/lib/rules/prefer-reflect.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/prefer-reflect'>;
}
declare module 'eslint/tests/lib/rules/prefer-rest-params.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/prefer-rest-params'>;
}
declare module 'eslint/tests/lib/rules/prefer-spread.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/prefer-spread'>;
}
declare module 'eslint/tests/lib/rules/prefer-template.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/prefer-template'>;
}
declare module 'eslint/tests/lib/rules/quote-props.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/quote-props'>;
}
declare module 'eslint/tests/lib/rules/quotes.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/quotes'>;
}
declare module 'eslint/tests/lib/rules/radix.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/radix'>;
}
declare module 'eslint/tests/lib/rules/require-await.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/require-await'>;
}
declare module 'eslint/tests/lib/rules/require-jsdoc.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/require-jsdoc'>;
}
declare module 'eslint/tests/lib/rules/require-yield.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/require-yield'>;
}
declare module 'eslint/tests/lib/rules/rest-spread-spacing.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/rest-spread-spacing'
  >;
}
declare module 'eslint/tests/lib/rules/semi-spacing.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/semi-spacing'>;
}
declare module 'eslint/tests/lib/rules/semi-style.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/semi-style'>;
}
declare module 'eslint/tests/lib/rules/semi.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/semi'>;
}
declare module 'eslint/tests/lib/rules/sort-imports.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/sort-imports'>;
}
declare module 'eslint/tests/lib/rules/sort-keys.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/sort-keys'>;
}
declare module 'eslint/tests/lib/rules/sort-vars.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/sort-vars'>;
}
declare module 'eslint/tests/lib/rules/space-before-blocks.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/space-before-blocks'
  >;
}
declare module 'eslint/tests/lib/rules/space-before-function-paren.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/space-before-function-paren'
  >;
}
declare module 'eslint/tests/lib/rules/space-in-parens.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/space-in-parens'>;
}
declare module 'eslint/tests/lib/rules/space-infix-ops.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/space-infix-ops'>;
}
declare module 'eslint/tests/lib/rules/space-unary-ops.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/space-unary-ops'>;
}
declare module 'eslint/tests/lib/rules/spaced-comment.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/spaced-comment'>;
}
declare module 'eslint/tests/lib/rules/strict.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/strict'>;
}
declare module 'eslint/tests/lib/rules/switch-colon-spacing.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/switch-colon-spacing'
  >;
}
declare module 'eslint/tests/lib/rules/symbol-description.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/symbol-description'>;
}
declare module 'eslint/tests/lib/rules/template-curly-spacing.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/template-curly-spacing'
  >;
}
declare module 'eslint/tests/lib/rules/template-tag-spacing.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/rules/template-tag-spacing'
  >;
}
declare module 'eslint/tests/lib/rules/unicode-bom.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/unicode-bom'>;
}
declare module 'eslint/tests/lib/rules/use-isnan.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/use-isnan'>;
}
declare module 'eslint/tests/lib/rules/valid-jsdoc.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/valid-jsdoc'>;
}
declare module 'eslint/tests/lib/rules/valid-typeof.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/valid-typeof'>;
}
declare module 'eslint/tests/lib/rules/vars-on-top.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/vars-on-top'>;
}
declare module 'eslint/tests/lib/rules/wrap-iife.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/wrap-iife'>;
}
declare module 'eslint/tests/lib/rules/wrap-regex.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/wrap-regex'>;
}
declare module 'eslint/tests/lib/rules/yield-star-spacing.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/yield-star-spacing'>;
}
declare module 'eslint/tests/lib/rules/yoda.js' {
  declare module.exports: $Exports<'eslint/tests/lib/rules/yoda'>;
}
declare module 'eslint/tests/lib/testers/rule-tester.js' {
  declare module.exports: $Exports<'eslint/tests/lib/testers/rule-tester'>;
}
declare module 'eslint/tests/lib/token-store.js' {
  declare module.exports: $Exports<'eslint/tests/lib/token-store'>;
}
declare module 'eslint/tests/lib/util/apply-disable-directives.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/util/apply-disable-directives'
  >;
}
declare module 'eslint/tests/lib/util/fix-tracker.js' {
  declare module.exports: $Exports<'eslint/tests/lib/util/fix-tracker'>;
}
declare module 'eslint/tests/lib/util/glob-util.js' {
  declare module.exports: $Exports<'eslint/tests/lib/util/glob-util'>;
}
declare module 'eslint/tests/lib/util/module-resolver.js' {
  declare module.exports: $Exports<'eslint/tests/lib/util/module-resolver'>;
}
declare module 'eslint/tests/lib/util/node-event-generator.js' {
  declare module.exports: $Exports<
    'eslint/tests/lib/util/node-event-generator'
  >;
}
declare module 'eslint/tests/lib/util/npm-util.js' {
  declare module.exports: $Exports<'eslint/tests/lib/util/npm-util'>;
}
declare module 'eslint/tests/lib/util/path-util.js' {
  declare module.exports: $Exports<'eslint/tests/lib/util/path-util'>;
}
declare module 'eslint/tests/lib/util/rule-fixer.js' {
  declare module.exports: $Exports<'eslint/tests/lib/util/rule-fixer'>;
}
declare module 'eslint/tests/lib/util/source-code-fixer.js' {
  declare module.exports: $Exports<'eslint/tests/lib/util/source-code-fixer'>;
}
declare module 'eslint/tests/lib/util/source-code-util.js' {
  declare module.exports: $Exports<'eslint/tests/lib/util/source-code-util'>;
}
declare module 'eslint/tests/lib/util/source-code.js' {
  declare module.exports: $Exports<'eslint/tests/lib/util/source-code'>;
}
declare module 'eslint/tests/lib/util/traverser.js' {
  declare module.exports: $Exports<'eslint/tests/lib/util/traverser'>;
}
declare module 'eslint/tests/performance/jshint.js' {
  declare module.exports: $Exports<'eslint/tests/performance/jshint'>;
}
declare module 'eslint/tests/templates/pr-create.md.ejs.js' {
  declare module.exports: $Exports<'eslint/tests/templates/pr-create.md.ejs'>;
}
declare module 'eslint/tests/tools/eslint-fuzzer.js' {
  declare module.exports: $Exports<'eslint/tests/tools/eslint-fuzzer'>;
}
declare module 'eslint/tools/eslint-fuzzer.js' {
  declare module.exports: $Exports<'eslint/tools/eslint-fuzzer'>;
}
declare module 'eslint/tools/fuzzer-runner.js' {
  declare module.exports: $Exports<'eslint/tools/fuzzer-runner'>;
}
declare module 'eslint/tools/internal-testers/event-generator-tester.js' {
  declare module.exports: $Exports<
    'eslint/tools/internal-testers/event-generator-tester'
  >;
}
declare module 'eslint/tools/internal-testers/test-parser.js' {
  declare module.exports: $Exports<'eslint/tools/internal-testers/test-parser'>;
}
